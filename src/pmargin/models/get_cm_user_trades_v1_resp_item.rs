/*
 * Binance Portfolio Margin API
 *
 * OpenAPI specification for Binance exchange - Pmargin API
 *
 * The version of the OpenAPI document: 0.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::pmargin::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetCmUserTradesV1RespItem {
    #[serde(rename = "baseQty", skip_serializing_if = "Option::is_none")]
    pub base_qty: Option<String>,
    #[serde(rename = "buyer", skip_serializing_if = "Option::is_none")]
    pub buyer: Option<bool>,
    #[serde(rename = "commission", skip_serializing_if = "Option::is_none")]
    pub commission: Option<String>,
    #[serde(rename = "commissionAsset", skip_serializing_if = "Option::is_none")]
    pub commission_asset: Option<String>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "maker", skip_serializing_if = "Option::is_none")]
    pub maker: Option<bool>,
    #[serde(rename = "marginAsset", skip_serializing_if = "Option::is_none")]
    pub margin_asset: Option<String>,
    #[serde(rename = "orderId", skip_serializing_if = "Option::is_none")]
    pub order_id: Option<i64>,
    #[serde(rename = "pair", skip_serializing_if = "Option::is_none")]
    pub pair: Option<String>,
    #[serde(rename = "positionSide", skip_serializing_if = "Option::is_none")]
    pub position_side: Option<String>,
    #[serde(rename = "price", skip_serializing_if = "Option::is_none")]
    pub price: Option<String>,
    #[serde(rename = "qty", skip_serializing_if = "Option::is_none")]
    pub qty: Option<String>,
    #[serde(rename = "realizedPnl", skip_serializing_if = "Option::is_none")]
    pub realized_pnl: Option<String>,
    #[serde(rename = "side", skip_serializing_if = "Option::is_none")]
    pub side: Option<String>,
    #[serde(rename = "symbol", skip_serializing_if = "Option::is_none")]
    pub symbol: Option<String>,
    #[serde(rename = "time", skip_serializing_if = "Option::is_none")]
    pub time: Option<i64>,
}

impl GetCmUserTradesV1RespItem {
    pub fn new() -> GetCmUserTradesV1RespItem {
        GetCmUserTradesV1RespItem {
            base_qty: None,
            buyer: None,
            commission: None,
            commission_asset: None,
            id: None,
            maker: None,
            margin_asset: None,
            order_id: None,
            pair: None,
            position_side: None,
            price: None,
            qty: None,
            realized_pnl: None,
            side: None,
            symbol: None,
            time: None,
        }
    }
}

