/*
 * Binance Portfolio Margin API
 *
 * OpenAPI specification for Binance exchange - Pmargin API
 *
 * The version of the OpenAPI document: 0.2.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::pmargin::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateMarginRepayDebtV1Resp {
    #[serde(rename = "amount", skip_serializing_if = "Option::is_none")]
    pub amount: Option<String>,
    #[serde(rename = "asset", skip_serializing_if = "Option::is_none")]
    pub asset: Option<String>,
    #[serde(rename = "specifyRepayAssets", skip_serializing_if = "Option::is_none")]
    pub specify_repay_assets: Option<Vec<String>>,
    #[serde(rename = "success", skip_serializing_if = "Option::is_none")]
    pub success: Option<bool>,
    #[serde(rename = "updateTime", skip_serializing_if = "Option::is_none")]
    pub update_time: Option<i64>,
}

impl CreateMarginRepayDebtV1Resp {
    pub fn new() -> CreateMarginRepayDebtV1Resp {
        CreateMarginRepayDebtV1Resp {
            amount: None,
            asset: None,
            specify_repay_assets: None,
            success: None,
            update_time: None,
        }
    }
}

