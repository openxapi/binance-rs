/*
 * Binance USD-M Futures API
 *
 * OpenAPI specification for Binance exchange - Umfutures API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::derivatives::umfutures::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UmfuturesGetFuturesDataBasisRespItem {
    #[serde(rename = "annualizedBasisRate", skip_serializing_if = "Option::is_none")]
    pub annualized_basis_rate: Option<String>,
    #[serde(rename = "basis", skip_serializing_if = "Option::is_none")]
    pub basis: Option<String>,
    #[serde(rename = "basisRate", skip_serializing_if = "Option::is_none")]
    pub basis_rate: Option<String>,
    #[serde(rename = "contractType", skip_serializing_if = "Option::is_none")]
    pub contract_type: Option<String>,
    #[serde(rename = "futuresPrice", skip_serializing_if = "Option::is_none")]
    pub futures_price: Option<String>,
    #[serde(rename = "indexPrice", skip_serializing_if = "Option::is_none")]
    pub index_price: Option<String>,
    #[serde(rename = "pair", skip_serializing_if = "Option::is_none")]
    pub pair: Option<String>,
    #[serde(rename = "timestamp", skip_serializing_if = "Option::is_none")]
    pub timestamp: Option<i64>,
}

impl UmfuturesGetFuturesDataBasisRespItem {
    pub fn new() -> UmfuturesGetFuturesDataBasisRespItem {
        UmfuturesGetFuturesDataBasisRespItem {
            annualized_basis_rate: None,
            basis: None,
            basis_rate: None,
            contract_type: None,
            futures_price: None,
            index_price: None,
            pair: None,
            timestamp: None,
        }
    }
}

