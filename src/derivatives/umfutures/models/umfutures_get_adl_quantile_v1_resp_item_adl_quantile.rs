/*
 * Binance USD-M Futures API
 *
 * OpenAPI specification for Binance exchange - Umfutures API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::derivatives::umfutures::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UmfuturesGetAdlQuantileV1RespItemAdlQuantile {
    #[serde(rename = "HEDGE", skip_serializing_if = "Option::is_none")]
    pub hedge: Option<i32>,
    #[serde(rename = "LONG", skip_serializing_if = "Option::is_none")]
    pub long: Option<i32>,
    #[serde(rename = "SHORT", skip_serializing_if = "Option::is_none")]
    pub short: Option<i32>,
}

impl UmfuturesGetAdlQuantileV1RespItemAdlQuantile {
    pub fn new() -> UmfuturesGetAdlQuantileV1RespItemAdlQuantile {
        UmfuturesGetAdlQuantileV1RespItemAdlQuantile {
            hedge: None,
            long: None,
            short: None,
        }
    }
}

