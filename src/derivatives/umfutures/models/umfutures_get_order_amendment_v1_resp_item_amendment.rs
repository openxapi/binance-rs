/*
 * Binance USD-M Futures API
 *
 * OpenAPI specification for Binance exchange - Umfutures API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::derivatives::umfutures::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UmfuturesGetOrderAmendmentV1RespItemAmendment {
    #[serde(rename = "count", skip_serializing_if = "Option::is_none")]
    pub count: Option<i32>,
    #[serde(rename = "origQty", skip_serializing_if = "Option::is_none")]
    pub orig_qty: Option<Box<models::UmfuturesGetOrderAmendmentV1RespItemAmendmentOrigQty>>,
    #[serde(rename = "price", skip_serializing_if = "Option::is_none")]
    pub price: Option<Box<models::UmfuturesGetOrderAmendmentV1RespItemAmendmentOrigQty>>,
}

impl UmfuturesGetOrderAmendmentV1RespItemAmendment {
    pub fn new() -> UmfuturesGetOrderAmendmentV1RespItemAmendment {
        UmfuturesGetOrderAmendmentV1RespItemAmendment {
            count: None,
            orig_qty: None,
            price: None,
        }
    }
}

