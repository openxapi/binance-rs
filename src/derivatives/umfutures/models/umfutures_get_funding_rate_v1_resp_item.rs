/*
 * Binance USD-M Futures API
 *
 * OpenAPI specification for Binance exchange - Umfutures API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::derivatives::umfutures::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UmfuturesGetFundingRateV1RespItem {
    #[serde(rename = "fundingRate", skip_serializing_if = "Option::is_none")]
    pub funding_rate: Option<String>,
    #[serde(rename = "fundingTime", skip_serializing_if = "Option::is_none")]
    pub funding_time: Option<i64>,
    #[serde(rename = "markPrice", skip_serializing_if = "Option::is_none")]
    pub mark_price: Option<String>,
    #[serde(rename = "symbol", skip_serializing_if = "Option::is_none")]
    pub symbol: Option<String>,
}

impl UmfuturesGetFundingRateV1RespItem {
    pub fn new() -> UmfuturesGetFundingRateV1RespItem {
        UmfuturesGetFundingRateV1RespItem {
            funding_rate: None,
            funding_time: None,
            mark_price: None,
            symbol: None,
        }
    }
}

