/*
 * Binance COIN-M Futures API
 *
 * OpenAPI specification for Binance exchange - Cmfutures API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::derivatives::cmfutures::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CmfuturesSymbolFilter {
    #[serde(rename = "filterType", skip_serializing_if = "Option::is_none")]
    pub filter_type: Option<String>,
    #[serde(rename = "limit", skip_serializing_if = "Option::is_none")]
    pub limit: Option<i32>,
    #[serde(rename = "maxPrice", skip_serializing_if = "Option::is_none")]
    pub max_price: Option<String>,
    #[serde(rename = "maxQty", skip_serializing_if = "Option::is_none")]
    pub max_qty: Option<String>,
    #[serde(rename = "minPrice", skip_serializing_if = "Option::is_none")]
    pub min_price: Option<String>,
    #[serde(rename = "minQty", skip_serializing_if = "Option::is_none")]
    pub min_qty: Option<String>,
    #[serde(rename = "multiplierDecimal", skip_serializing_if = "Option::is_none")]
    pub multiplier_decimal: Option<i32>,
    #[serde(rename = "multiplierDown", skip_serializing_if = "Option::is_none")]
    pub multiplier_down: Option<String>,
    #[serde(rename = "multiplierUp", skip_serializing_if = "Option::is_none")]
    pub multiplier_up: Option<String>,
    #[serde(rename = "stepSize", skip_serializing_if = "Option::is_none")]
    pub step_size: Option<String>,
    #[serde(rename = "tickSize", skip_serializing_if = "Option::is_none")]
    pub tick_size: Option<String>,
}

impl CmfuturesSymbolFilter {
    pub fn new() -> CmfuturesSymbolFilter {
        CmfuturesSymbolFilter {
            filter_type: None,
            limit: None,
            max_price: None,
            max_qty: None,
            min_price: None,
            min_qty: None,
            multiplier_decimal: None,
            multiplier_down: None,
            multiplier_up: None,
            step_size: None,
            tick_size: None,
        }
    }
}

