/*
 * Binance Options API
 *
 * OpenAPI specification for Binance exchange - Options API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::derivatives::options::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OptionsGetPositionV1RespItem {
    #[serde(rename = "entryPrice", skip_serializing_if = "Option::is_none")]
    pub entry_price: Option<String>,
    #[serde(rename = "expiryDate", skip_serializing_if = "Option::is_none")]
    pub expiry_date: Option<i32>,
    #[serde(rename = "markPrice", skip_serializing_if = "Option::is_none")]
    pub mark_price: Option<String>,
    #[serde(rename = "markValue", skip_serializing_if = "Option::is_none")]
    pub mark_value: Option<String>,
    #[serde(rename = "optionSide", skip_serializing_if = "Option::is_none")]
    pub option_side: Option<String>,
    #[serde(rename = "positionCost", skip_serializing_if = "Option::is_none")]
    pub position_cost: Option<String>,
    #[serde(rename = "priceScale", skip_serializing_if = "Option::is_none")]
    pub price_scale: Option<i32>,
    #[serde(rename = "quantity", skip_serializing_if = "Option::is_none")]
    pub quantity: Option<String>,
    #[serde(rename = "quantityScale", skip_serializing_if = "Option::is_none")]
    pub quantity_scale: Option<i32>,
    #[serde(rename = "quoteAsset", skip_serializing_if = "Option::is_none")]
    pub quote_asset: Option<String>,
    #[serde(rename = "reducibleQty", skip_serializing_if = "Option::is_none")]
    pub reducible_qty: Option<String>,
    #[serde(rename = "ror", skip_serializing_if = "Option::is_none")]
    pub ror: Option<String>,
    #[serde(rename = "side", skip_serializing_if = "Option::is_none")]
    pub side: Option<String>,
    #[serde(rename = "strikePrice", skip_serializing_if = "Option::is_none")]
    pub strike_price: Option<String>,
    #[serde(rename = "symbol", skip_serializing_if = "Option::is_none")]
    pub symbol: Option<String>,
    #[serde(rename = "unrealizedPNL", skip_serializing_if = "Option::is_none")]
    pub unrealized_pnl: Option<String>,
}

impl OptionsGetPositionV1RespItem {
    pub fn new() -> OptionsGetPositionV1RespItem {
        OptionsGetPositionV1RespItem {
            entry_price: None,
            expiry_date: None,
            mark_price: None,
            mark_value: None,
            option_side: None,
            position_cost: None,
            price_scale: None,
            quantity: None,
            quantity_scale: None,
            quote_asset: None,
            reducible_qty: None,
            ror: None,
            side: None,
            strike_price: None,
            symbol: None,
            unrealized_pnl: None,
        }
    }
}

