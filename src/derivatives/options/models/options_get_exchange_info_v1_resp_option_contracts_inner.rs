/*
 * Binance Options API
 *
 * OpenAPI specification for Binance exchange - Options API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::derivatives::options::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OptionsGetExchangeInfoV1RespOptionContractsInner {
    #[serde(rename = "baseAsset", skip_serializing_if = "Option::is_none")]
    pub base_asset: Option<String>,
    #[serde(rename = "quoteAsset", skip_serializing_if = "Option::is_none")]
    pub quote_asset: Option<String>,
    #[serde(rename = "settleAsset", skip_serializing_if = "Option::is_none")]
    pub settle_asset: Option<String>,
    #[serde(rename = "underlying", skip_serializing_if = "Option::is_none")]
    pub underlying: Option<String>,
}

impl OptionsGetExchangeInfoV1RespOptionContractsInner {
    pub fn new() -> OptionsGetExchangeInfoV1RespOptionContractsInner {
        OptionsGetExchangeInfoV1RespOptionContractsInner {
            base_asset: None,
            quote_asset: None,
            settle_asset: None,
            underlying: None,
        }
    }
}

