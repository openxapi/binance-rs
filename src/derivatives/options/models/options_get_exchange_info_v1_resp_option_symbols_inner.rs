/*
 * Binance Options API
 *
 * OpenAPI specification for Binance exchange - Options API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::derivatives::options::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OptionsGetExchangeInfoV1RespOptionSymbolsInner {
    #[serde(rename = "expiryDate", skip_serializing_if = "Option::is_none")]
    pub expiry_date: Option<i32>,
    #[serde(rename = "filters", skip_serializing_if = "Option::is_none")]
    pub filters: Option<Vec<models::OptionsSymbolFilter>>,
    #[serde(rename = "initialMargin", skip_serializing_if = "Option::is_none")]
    pub initial_margin: Option<String>,
    #[serde(rename = "maintenanceMargin", skip_serializing_if = "Option::is_none")]
    pub maintenance_margin: Option<String>,
    #[serde(rename = "makerFeeRate", skip_serializing_if = "Option::is_none")]
    pub maker_fee_rate: Option<String>,
    #[serde(rename = "maxQty", skip_serializing_if = "Option::is_none")]
    pub max_qty: Option<String>,
    #[serde(rename = "minInitialMargin", skip_serializing_if = "Option::is_none")]
    pub min_initial_margin: Option<String>,
    #[serde(rename = "minMaintenanceMargin", skip_serializing_if = "Option::is_none")]
    pub min_maintenance_margin: Option<String>,
    #[serde(rename = "minQty", skip_serializing_if = "Option::is_none")]
    pub min_qty: Option<String>,
    #[serde(rename = "priceScale", skip_serializing_if = "Option::is_none")]
    pub price_scale: Option<i32>,
    #[serde(rename = "quantityScale", skip_serializing_if = "Option::is_none")]
    pub quantity_scale: Option<i32>,
    #[serde(rename = "quoteAsset", skip_serializing_if = "Option::is_none")]
    pub quote_asset: Option<String>,
    #[serde(rename = "side", skip_serializing_if = "Option::is_none")]
    pub side: Option<String>,
    #[serde(rename = "strikePrice", skip_serializing_if = "Option::is_none")]
    pub strike_price: Option<String>,
    #[serde(rename = "symbol", skip_serializing_if = "Option::is_none")]
    pub symbol: Option<String>,
    #[serde(rename = "takerFeeRate", skip_serializing_if = "Option::is_none")]
    pub taker_fee_rate: Option<String>,
    #[serde(rename = "underlying", skip_serializing_if = "Option::is_none")]
    pub underlying: Option<String>,
    #[serde(rename = "unit", skip_serializing_if = "Option::is_none")]
    pub unit: Option<i32>,
}

impl OptionsGetExchangeInfoV1RespOptionSymbolsInner {
    pub fn new() -> OptionsGetExchangeInfoV1RespOptionSymbolsInner {
        OptionsGetExchangeInfoV1RespOptionSymbolsInner {
            expiry_date: None,
            filters: None,
            initial_margin: None,
            maintenance_margin: None,
            maker_fee_rate: None,
            max_qty: None,
            min_initial_margin: None,
            min_maintenance_margin: None,
            min_qty: None,
            price_scale: None,
            quantity_scale: None,
            quote_asset: None,
            side: None,
            strike_price: None,
            symbol: None,
            taker_fee_rate: None,
            underlying: None,
            unit: None,
        }
    }
}

