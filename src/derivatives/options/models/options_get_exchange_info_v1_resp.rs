/*
 * Binance Options API
 *
 * OpenAPI specification for Binance exchange - Options API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::derivatives::options::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OptionsGetExchangeInfoV1Resp {
    #[serde(rename = "optionAssets", skip_serializing_if = "Option::is_none")]
    pub option_assets: Option<Vec<models::OptionsGetExchangeInfoV1RespOptionAssetsInner>>,
    #[serde(rename = "optionContracts", skip_serializing_if = "Option::is_none")]
    pub option_contracts: Option<Vec<models::OptionsGetExchangeInfoV1RespOptionContractsInner>>,
    #[serde(rename = "optionSymbols", skip_serializing_if = "Option::is_none")]
    pub option_symbols: Option<Vec<models::OptionsGetExchangeInfoV1RespOptionSymbolsInner>>,
    #[serde(rename = "rateLimits", skip_serializing_if = "Option::is_none")]
    pub rate_limits: Option<Vec<models::OptionsGetExchangeInfoV1RespRateLimitsInner>>,
    #[serde(rename = "serverTime", skip_serializing_if = "Option::is_none")]
    pub server_time: Option<i64>,
    #[serde(rename = "timezone", skip_serializing_if = "Option::is_none")]
    pub timezone: Option<String>,
}

impl OptionsGetExchangeInfoV1Resp {
    pub fn new() -> OptionsGetExchangeInfoV1Resp {
        OptionsGetExchangeInfoV1Resp {
            option_assets: None,
            option_contracts: None,
            option_symbols: None,
            rate_limits: None,
            server_time: None,
            timezone: None,
        }
    }
}

