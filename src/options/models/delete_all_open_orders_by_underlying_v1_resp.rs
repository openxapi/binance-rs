/*
 * Binance Options API
 *
 * OpenAPI specification for Binance exchange - Options API
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::options::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DeleteAllOpenOrdersByUnderlyingV1Resp {
    #[serde(rename = "code", skip_serializing_if = "Option::is_none")]
    pub code: Option<i32>,
    #[serde(rename = "data", skip_serializing_if = "Option::is_none")]
    pub data: Option<i32>,
    #[serde(rename = "msg", skip_serializing_if = "Option::is_none")]
    pub msg: Option<String>,
}

impl DeleteAllOpenOrdersByUnderlyingV1Resp {
    pub fn new() -> DeleteAllOpenOrdersByUnderlyingV1Resp {
        DeleteAllOpenOrdersByUnderlyingV1Resp {
            code: None,
            data: None,
            msg: None,
        }
    }
}

