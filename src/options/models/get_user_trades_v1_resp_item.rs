/*
 * Binance Options API
 *
 * OpenAPI specification for Binance exchange - Options API
 *
 * The version of the OpenAPI document: 0.2.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::options::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetUserTradesV1RespItem {
    #[serde(rename = "fee", skip_serializing_if = "Option::is_none")]
    pub fee: Option<String>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "liquidity", skip_serializing_if = "Option::is_none")]
    pub liquidity: Option<String>,
    #[serde(rename = "optionSide", skip_serializing_if = "Option::is_none")]
    pub option_side: Option<String>,
    #[serde(rename = "orderId", skip_serializing_if = "Option::is_none")]
    pub order_id: Option<i64>,
    #[serde(rename = "price", skip_serializing_if = "Option::is_none")]
    pub price: Option<String>,
    #[serde(rename = "priceScale", skip_serializing_if = "Option::is_none")]
    pub price_scale: Option<i32>,
    #[serde(rename = "quantity", skip_serializing_if = "Option::is_none")]
    pub quantity: Option<String>,
    #[serde(rename = "quantityScale", skip_serializing_if = "Option::is_none")]
    pub quantity_scale: Option<i32>,
    #[serde(rename = "quoteAsset", skip_serializing_if = "Option::is_none")]
    pub quote_asset: Option<String>,
    #[serde(rename = "realizedProfit", skip_serializing_if = "Option::is_none")]
    pub realized_profit: Option<String>,
    #[serde(rename = "side", skip_serializing_if = "Option::is_none")]
    pub side: Option<String>,
    #[serde(rename = "symbol", skip_serializing_if = "Option::is_none")]
    pub symbol: Option<String>,
    #[serde(rename = "time", skip_serializing_if = "Option::is_none")]
    pub time: Option<i64>,
    #[serde(rename = "tradeId", skip_serializing_if = "Option::is_none")]
    pub trade_id: Option<i64>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    #[serde(rename = "volatility", skip_serializing_if = "Option::is_none")]
    pub volatility: Option<String>,
}

impl GetUserTradesV1RespItem {
    pub fn new() -> GetUserTradesV1RespItem {
        GetUserTradesV1RespItem {
            fee: None,
            id: None,
            liquidity: None,
            option_side: None,
            order_id: None,
            price: None,
            price_scale: None,
            quantity: None,
            quantity_scale: None,
            quote_asset: None,
            realized_profit: None,
            side: None,
            symbol: None,
            time: None,
            trade_id: None,
            r#type: None,
            volatility: None,
        }
    }
}

