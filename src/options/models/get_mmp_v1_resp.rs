/*
 * Binance Options API
 *
 * OpenAPI specification for Binance exchange - Options API
 *
 * The version of the OpenAPI document: 0.2.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::options::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetMmpV1Resp {
    #[serde(rename = "deltaLimit", skip_serializing_if = "Option::is_none")]
    pub delta_limit: Option<String>,
    #[serde(rename = "frozenTimeInMilliseconds", skip_serializing_if = "Option::is_none")]
    pub frozen_time_in_milliseconds: Option<i32>,
    #[serde(rename = "lastTriggerTime", skip_serializing_if = "Option::is_none")]
    pub last_trigger_time: Option<i64>,
    #[serde(rename = "qtyLimit", skip_serializing_if = "Option::is_none")]
    pub qty_limit: Option<String>,
    #[serde(rename = "underlying", skip_serializing_if = "Option::is_none")]
    pub underlying: Option<String>,
    #[serde(rename = "underlyingId", skip_serializing_if = "Option::is_none")]
    pub underlying_id: Option<i64>,
    #[serde(rename = "windowTimeInMilliseconds", skip_serializing_if = "Option::is_none")]
    pub window_time_in_milliseconds: Option<i32>,
}

impl GetMmpV1Resp {
    pub fn new() -> GetMmpV1Resp {
        GetMmpV1Resp {
            delta_limit: None,
            frozen_time_in_milliseconds: None,
            last_trigger_time: None,
            qty_limit: None,
            underlying: None,
            underlying_id: None,
            window_time_in_milliseconds: None,
        }
    }
}

