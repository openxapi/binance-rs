/*
 * Binance Options API
 *
 * OpenAPI specification for Binance exchange - Options API
 *
 * The version of the OpenAPI document: 0.2.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::options::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OptionsCreateBatchOrdersV1ReqOrdersItem {
    #[serde(rename = "clientOrderId", skip_serializing_if = "Option::is_none")]
    pub client_order_id: Option<String>,
    #[serde(rename = "isMmp", skip_serializing_if = "Option::is_none")]
    pub is_mmp: Option<bool>,
    #[serde(rename = "newOrderRespType", skip_serializing_if = "Option::is_none")]
    pub new_order_resp_type: Option<String>,
    #[serde(rename = "postOnly", skip_serializing_if = "Option::is_none")]
    pub post_only: Option<bool>,
    #[serde(rename = "price", skip_serializing_if = "Option::is_none")]
    pub price: Option<String>,
    #[serde(rename = "quantity")]
    pub quantity: String,
    #[serde(rename = "reduceOnly", skip_serializing_if = "Option::is_none")]
    pub reduce_only: Option<bool>,
    #[serde(rename = "side")]
    pub side: String,
    #[serde(rename = "symbol")]
    pub symbol: String,
    #[serde(rename = "timeInForce", skip_serializing_if = "Option::is_none")]
    pub time_in_force: Option<String>,
    #[serde(rename = "type")]
    pub r#type: String,
}

impl OptionsCreateBatchOrdersV1ReqOrdersItem {
    pub fn new(quantity: String, side: String, symbol: String, r#type: String) -> OptionsCreateBatchOrdersV1ReqOrdersItem {
        OptionsCreateBatchOrdersV1ReqOrdersItem {
            client_order_id: None,
            is_mmp: None,
            new_order_resp_type: None,
            post_only: None,
            price: None,
            quantity,
            reduce_only: None,
            side,
            symbol,
            time_in_force: None,
            r#type,
        }
    }
}

