/*
 * Binance Options API
 *
 * OpenAPI specification for Binance exchange - Options API
 *
 * The version of the OpenAPI document: 0.2.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::options::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OptionsGetExchangeInfoV1RespRateLimitsInner {
    #[serde(rename = "interval", skip_serializing_if = "Option::is_none")]
    pub interval: Option<String>,
    #[serde(rename = "intervalNum", skip_serializing_if = "Option::is_none")]
    pub interval_num: Option<i32>,
    #[serde(rename = "limit", skip_serializing_if = "Option::is_none")]
    pub limit: Option<i32>,
    #[serde(rename = "rateLimitType", skip_serializing_if = "Option::is_none")]
    pub rate_limit_type: Option<String>,
}

impl OptionsGetExchangeInfoV1RespRateLimitsInner {
    pub fn new() -> OptionsGetExchangeInfoV1RespRateLimitsInner {
        OptionsGetExchangeInfoV1RespRateLimitsInner {
            interval: None,
            interval_num: None,
            limit: None,
            rate_limit_type: None,
        }
    }
}

