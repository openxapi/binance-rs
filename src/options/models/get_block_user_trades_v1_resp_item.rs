/*
 * Binance Options API
 *
 * OpenAPI specification for Binance exchange - Options API
 *
 * The version of the OpenAPI document: 0.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::options::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetBlockUserTradesV1RespItem {
    #[serde(rename = "blockTradeSettlementKey", skip_serializing_if = "Option::is_none")]
    pub block_trade_settlement_key: Option<String>,
    #[serde(rename = "crossType", skip_serializing_if = "Option::is_none")]
    pub cross_type: Option<String>,
    #[serde(rename = "legs", skip_serializing_if = "Option::is_none")]
    pub legs: Option<Vec<models::GetBlockUserTradesV1RespItemLegsInner>>,
    #[serde(rename = "parentOrderId", skip_serializing_if = "Option::is_none")]
    pub parent_order_id: Option<String>,
}

impl GetBlockUserTradesV1RespItem {
    pub fn new() -> GetBlockUserTradesV1RespItem {
        GetBlockUserTradesV1RespItem {
            block_trade_settlement_key: None,
            cross_type: None,
            legs: None,
            parent_order_id: None,
        }
    }
}

