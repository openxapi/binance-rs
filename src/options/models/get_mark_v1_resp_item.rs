/*
 * Binance Options API
 *
 * OpenAPI specification for Binance exchange - Options API
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::options::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetMarkV1RespItem {
    #[serde(rename = "askIV", skip_serializing_if = "Option::is_none")]
    pub ask_iv: Option<String>,
    #[serde(rename = "bidIV", skip_serializing_if = "Option::is_none")]
    pub bid_iv: Option<String>,
    #[serde(rename = "delta", skip_serializing_if = "Option::is_none")]
    pub delta: Option<String>,
    #[serde(rename = "gamma", skip_serializing_if = "Option::is_none")]
    pub gamma: Option<String>,
    #[serde(rename = "highPriceLimit", skip_serializing_if = "Option::is_none")]
    pub high_price_limit: Option<String>,
    #[serde(rename = "lowPriceLimit", skip_serializing_if = "Option::is_none")]
    pub low_price_limit: Option<String>,
    #[serde(rename = "markIV", skip_serializing_if = "Option::is_none")]
    pub mark_iv: Option<String>,
    #[serde(rename = "markPrice", skip_serializing_if = "Option::is_none")]
    pub mark_price: Option<String>,
    #[serde(rename = "riskFreeInterest", skip_serializing_if = "Option::is_none")]
    pub risk_free_interest: Option<String>,
    #[serde(rename = "symbol", skip_serializing_if = "Option::is_none")]
    pub symbol: Option<String>,
    #[serde(rename = "theta", skip_serializing_if = "Option::is_none")]
    pub theta: Option<String>,
    #[serde(rename = "vega", skip_serializing_if = "Option::is_none")]
    pub vega: Option<String>,
}

impl GetMarkV1RespItem {
    pub fn new() -> GetMarkV1RespItem {
        GetMarkV1RespItem {
            ask_iv: None,
            bid_iv: None,
            delta: None,
            gamma: None,
            high_price_limit: None,
            low_price_limit: None,
            mark_iv: None,
            mark_price: None,
            risk_free_interest: None,
            symbol: None,
            theta: None,
            vega: None,
        }
    }
}

