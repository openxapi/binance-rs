/*
 * Binance Options API
 *
 * OpenAPI specification for Binance exchange - Options API
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::options::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetOpenInterestV1RespItem {
    #[serde(rename = "sumOpenInterest", skip_serializing_if = "Option::is_none")]
    pub sum_open_interest: Option<String>,
    #[serde(rename = "sumOpenInterestUsd", skip_serializing_if = "Option::is_none")]
    pub sum_open_interest_usd: Option<String>,
    #[serde(rename = "symbol", skip_serializing_if = "Option::is_none")]
    pub symbol: Option<String>,
    #[serde(rename = "timestamp", skip_serializing_if = "Option::is_none")]
    pub timestamp: Option<String>,
}

impl GetOpenInterestV1RespItem {
    pub fn new() -> GetOpenInterestV1RespItem {
        GetOpenInterestV1RespItem {
            sum_open_interest: None,
            sum_open_interest_usd: None,
            symbol: None,
            timestamp: None,
        }
    }
}

