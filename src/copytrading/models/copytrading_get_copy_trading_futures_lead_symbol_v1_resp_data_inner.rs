/*
 * Binance Copy Trading API
 *
 * OpenAPI specification for Binance exchange - Copytrading API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::copytrading::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner {
    #[serde(rename = "baseAsset", skip_serializing_if = "Option::is_none")]
    pub base_asset: Option<String>,
    #[serde(rename = "quoteAsset", skip_serializing_if = "Option::is_none")]
    pub quote_asset: Option<String>,
    #[serde(rename = "symbol", skip_serializing_if = "Option::is_none")]
    pub symbol: Option<String>,
}

impl CopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner {
    pub fn new() -> CopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner {
        CopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner {
            base_asset: None,
            quote_asset: None,
            symbol: None,
        }
    }
}

