/*
 * Binance COIN-M Futures API
 *
 * OpenAPI specification for Binance exchange - Cmfutures API
 *
 * The version of the OpenAPI document: 0.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::cmfutures::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetFuturesDataOpenInterestHistRespItem {
    #[serde(rename = "contractType", skip_serializing_if = "Option::is_none")]
    pub contract_type: Option<String>,
    #[serde(rename = "pair", skip_serializing_if = "Option::is_none")]
    pub pair: Option<String>,
    #[serde(rename = "sumOpenInterest", skip_serializing_if = "Option::is_none")]
    pub sum_open_interest: Option<String>,
    #[serde(rename = "sumOpenInterestValue", skip_serializing_if = "Option::is_none")]
    pub sum_open_interest_value: Option<String>,
    #[serde(rename = "timestamp", skip_serializing_if = "Option::is_none")]
    pub timestamp: Option<i64>,
}

impl GetFuturesDataOpenInterestHistRespItem {
    pub fn new() -> GetFuturesDataOpenInterestHistRespItem {
        GetFuturesDataOpenInterestHistRespItem {
            contract_type: None,
            pair: None,
            sum_open_interest: None,
            sum_open_interest_value: None,
            timestamp: None,
        }
    }
}

