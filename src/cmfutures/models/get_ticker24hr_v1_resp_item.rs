/*
 * Binance COIN-M Futures API
 *
 * OpenAPI specification for Binance exchange - Cmfutures API
 *
 * The version of the OpenAPI document: 0.2.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::cmfutures::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetTicker24hrV1RespItem {
    #[serde(rename = "baseVolume", skip_serializing_if = "Option::is_none")]
    pub base_volume: Option<String>,
    #[serde(rename = "closeTime", skip_serializing_if = "Option::is_none")]
    pub close_time: Option<i64>,
    #[serde(rename = "count", skip_serializing_if = "Option::is_none")]
    pub count: Option<i32>,
    #[serde(rename = "firstId", skip_serializing_if = "Option::is_none")]
    pub first_id: Option<i64>,
    #[serde(rename = "highPrice", skip_serializing_if = "Option::is_none")]
    pub high_price: Option<String>,
    #[serde(rename = "lastId", skip_serializing_if = "Option::is_none")]
    pub last_id: Option<i64>,
    #[serde(rename = "lastPrice", skip_serializing_if = "Option::is_none")]
    pub last_price: Option<String>,
    #[serde(rename = "lastQty", skip_serializing_if = "Option::is_none")]
    pub last_qty: Option<String>,
    #[serde(rename = "lowPrice", skip_serializing_if = "Option::is_none")]
    pub low_price: Option<String>,
    #[serde(rename = "openPrice", skip_serializing_if = "Option::is_none")]
    pub open_price: Option<String>,
    #[serde(rename = "openTime", skip_serializing_if = "Option::is_none")]
    pub open_time: Option<i64>,
    #[serde(rename = "pair", skip_serializing_if = "Option::is_none")]
    pub pair: Option<String>,
    #[serde(rename = "priceChange", skip_serializing_if = "Option::is_none")]
    pub price_change: Option<String>,
    #[serde(rename = "priceChangePercent", skip_serializing_if = "Option::is_none")]
    pub price_change_percent: Option<String>,
    #[serde(rename = "symbol", skip_serializing_if = "Option::is_none")]
    pub symbol: Option<String>,
    #[serde(rename = "volume", skip_serializing_if = "Option::is_none")]
    pub volume: Option<String>,
    #[serde(rename = "weightedAvgPrice", skip_serializing_if = "Option::is_none")]
    pub weighted_avg_price: Option<String>,
}

impl GetTicker24hrV1RespItem {
    pub fn new() -> GetTicker24hrV1RespItem {
        GetTicker24hrV1RespItem {
            base_volume: None,
            close_time: None,
            count: None,
            first_id: None,
            high_price: None,
            last_id: None,
            last_price: None,
            last_qty: None,
            low_price: None,
            open_price: None,
            open_time: None,
            pair: None,
            price_change: None,
            price_change_percent: None,
            symbol: None,
            volume: None,
            weighted_avg_price: None,
        }
    }
}

