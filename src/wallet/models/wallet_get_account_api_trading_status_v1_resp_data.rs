/*
 * Binance Wallet API
 *
 * OpenAPI specification for Binance exchange - Wallet API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::wallet::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WalletGetAccountApiTradingStatusV1RespData {
    #[serde(rename = "isLocked", skip_serializing_if = "Option::is_none")]
    pub is_locked: Option<bool>,
    #[serde(rename = "plannedRecoverTime", skip_serializing_if = "Option::is_none")]
    pub planned_recover_time: Option<i64>,
    #[serde(rename = "triggerCondition", skip_serializing_if = "Option::is_none")]
    pub trigger_condition: Option<Box<models::WalletGetAccountApiTradingStatusV1RespDataTriggerCondition>>,
    #[serde(rename = "updateTime", skip_serializing_if = "Option::is_none")]
    pub update_time: Option<i64>,
}

impl WalletGetAccountApiTradingStatusV1RespData {
    pub fn new() -> WalletGetAccountApiTradingStatusV1RespData {
        WalletGetAccountApiTradingStatusV1RespData {
            is_locked: None,
            planned_recover_time: None,
            trigger_condition: None,
            update_time: None,
        }
    }
}

