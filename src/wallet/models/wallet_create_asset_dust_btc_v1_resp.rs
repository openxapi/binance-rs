/*
 * Binance Wallet API
 *
 * OpenAPI specification for Binance exchange - Wallet API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::wallet::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WalletCreateAssetDustBtcV1Resp {
    #[serde(rename = "details", skip_serializing_if = "Option::is_none")]
    pub details: Option<Vec<models::WalletCreateAssetDustBtcV1RespDetailsInner>>,
    #[serde(rename = "dribbletPercentage", skip_serializing_if = "Option::is_none")]
    pub dribblet_percentage: Option<String>,
    #[serde(rename = "totalTransferBNB", skip_serializing_if = "Option::is_none")]
    pub total_transfer_bnb: Option<String>,
    #[serde(rename = "totalTransferBtc", skip_serializing_if = "Option::is_none")]
    pub total_transfer_btc: Option<String>,
}

impl WalletCreateAssetDustBtcV1Resp {
    pub fn new() -> WalletCreateAssetDustBtcV1Resp {
        WalletCreateAssetDustBtcV1Resp {
            details: None,
            dribblet_percentage: None,
            total_transfer_bnb: None,
            total_transfer_btc: None,
        }
    }
}

