/*
 * Binance Wallet API
 *
 * OpenAPI specification for Binance exchange - Wallet API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::wallet::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WalletCreateAssetDustV1RespTransferResultInner {
    #[serde(rename = "amount", skip_serializing_if = "Option::is_none")]
    pub amount: Option<String>,
    #[serde(rename = "fromAsset", skip_serializing_if = "Option::is_none")]
    pub from_asset: Option<String>,
    #[serde(rename = "operateTime", skip_serializing_if = "Option::is_none")]
    pub operate_time: Option<i64>,
    #[serde(rename = "serviceChargeAmount", skip_serializing_if = "Option::is_none")]
    pub service_charge_amount: Option<String>,
    #[serde(rename = "tranId", skip_serializing_if = "Option::is_none")]
    pub tran_id: Option<i64>,
    #[serde(rename = "transferedAmount", skip_serializing_if = "Option::is_none")]
    pub transfered_amount: Option<String>,
}

impl WalletCreateAssetDustV1RespTransferResultInner {
    pub fn new() -> WalletCreateAssetDustV1RespTransferResultInner {
        WalletCreateAssetDustV1RespTransferResultInner {
            amount: None,
            from_asset: None,
            operate_time: None,
            service_charge_amount: None,
            tran_id: None,
            transfered_amount: None,
        }
    }
}

