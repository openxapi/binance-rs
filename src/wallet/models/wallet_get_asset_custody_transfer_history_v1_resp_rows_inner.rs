/*
 * Binance Wallet API
 *
 * OpenAPI specification for Binance exchange - Wallet API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::wallet::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WalletGetAssetCustodyTransferHistoryV1RespRowsInner {
    #[serde(rename = "amount", skip_serializing_if = "Option::is_none")]
    pub amount: Option<String>,
    #[serde(rename = "asset", skip_serializing_if = "Option::is_none")]
    pub asset: Option<String>,
    #[serde(rename = "clientTranId", skip_serializing_if = "Option::is_none")]
    pub client_tran_id: Option<String>,
    #[serde(rename = "time", skip_serializing_if = "Option::is_none")]
    pub time: Option<i64>,
    #[serde(rename = "transferType", skip_serializing_if = "Option::is_none")]
    pub transfer_type: Option<String>,
}

impl WalletGetAssetCustodyTransferHistoryV1RespRowsInner {
    pub fn new() -> WalletGetAssetCustodyTransferHistoryV1RespRowsInner {
        WalletGetAssetCustodyTransferHistoryV1RespRowsInner {
            amount: None,
            asset: None,
            client_tran_id: None,
            time: None,
            transfer_type: None,
        }
    }
}

