/*
 * Binance Sub Account API
 *
 * OpenAPI specification for Binance exchange - Subaccount API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::subaccount::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SubaccountDeleteSubAccountSubAccountApiIpRestrictionIpListV1Resp {
    #[serde(rename = "apiKey", skip_serializing_if = "Option::is_none")]
    pub api_key: Option<String>,
    #[serde(rename = "ipList", skip_serializing_if = "Option::is_none")]
    pub ip_list: Option<Vec<String>>,
    #[serde(rename = "ipRestrict", skip_serializing_if = "Option::is_none")]
    pub ip_restrict: Option<String>,
    #[serde(rename = "updateTime", skip_serializing_if = "Option::is_none")]
    pub update_time: Option<i64>,
}

impl SubaccountDeleteSubAccountSubAccountApiIpRestrictionIpListV1Resp {
    pub fn new() -> SubaccountDeleteSubAccountSubAccountApiIpRestrictionIpListV1Resp {
        SubaccountDeleteSubAccountSubAccountApiIpRestrictionIpListV1Resp {
            api_key: None,
            ip_list: None,
            ip_restrict: None,
            update_time: None,
        }
    }
}

