/*
 * Binance Sub Account API
 *
 * OpenAPI specification for Binance exchange - Subaccount API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::subaccount::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SubaccountGetSubAccountSpotSummaryV1RespSpotSubUserAssetBtcVoListInner {
    #[serde(rename = "email", skip_serializing_if = "Option::is_none")]
    pub email: Option<String>,
    #[serde(rename = "totalAsset", skip_serializing_if = "Option::is_none")]
    pub total_asset: Option<String>,
}

impl SubaccountGetSubAccountSpotSummaryV1RespSpotSubUserAssetBtcVoListInner {
    pub fn new() -> SubaccountGetSubAccountSpotSummaryV1RespSpotSubUserAssetBtcVoListInner {
        SubaccountGetSubAccountSpotSummaryV1RespSpotSubUserAssetBtcVoListInner {
            email: None,
            total_asset: None,
        }
    }
}

