/*
 * Binance Sub Account API
 *
 * OpenAPI specification for Binance exchange - Subaccount API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::subaccount::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SubaccountCreateSubAccountFuturesInternalTransferV1Resp {
    #[serde(rename = "success", skip_serializing_if = "Option::is_none")]
    pub success: Option<bool>,
    #[serde(rename = "txnId", skip_serializing_if = "Option::is_none")]
    pub txn_id: Option<String>,
}

impl SubaccountCreateSubAccountFuturesInternalTransferV1Resp {
    pub fn new() -> SubaccountCreateSubAccountFuturesInternalTransferV1Resp {
        SubaccountCreateSubAccountFuturesInternalTransferV1Resp {
            success: None,
            txn_id: None,
        }
    }
}

