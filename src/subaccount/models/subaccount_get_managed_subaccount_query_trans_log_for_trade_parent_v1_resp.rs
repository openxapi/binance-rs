/*
 * Binance Sub Account API
 *
 * OpenAPI specification for Binance exchange - Subaccount API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::subaccount::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SubaccountGetManagedSubaccountQueryTransLogForTradeParentV1Resp {
    #[serde(rename = "count", skip_serializing_if = "Option::is_none")]
    pub count: Option<i32>,
    #[serde(rename = "managerSubTransferHistoryVos", skip_serializing_if = "Option::is_none")]
    pub manager_sub_transfer_history_vos: Option<Vec<models::SubaccountGetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner>>,
}

impl SubaccountGetManagedSubaccountQueryTransLogForTradeParentV1Resp {
    pub fn new() -> SubaccountGetManagedSubaccountQueryTransLogForTradeParentV1Resp {
        SubaccountGetManagedSubaccountQueryTransLogForTradeParentV1Resp {
            count: None,
            manager_sub_transfer_history_vos: None,
        }
    }
}

