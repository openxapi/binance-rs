/*
 * Binance Sub Account API
 *
 * OpenAPI specification for Binance exchange - Subaccount API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::subaccount::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SubaccountGetSubAccountUniversalTransferV1RespResultInner {
    #[serde(rename = "amount", skip_serializing_if = "Option::is_none")]
    pub amount: Option<String>,
    #[serde(rename = "asset", skip_serializing_if = "Option::is_none")]
    pub asset: Option<String>,
    #[serde(rename = "clientTranId", skip_serializing_if = "Option::is_none")]
    pub client_tran_id: Option<String>,
    #[serde(rename = "createTimeStamp", skip_serializing_if = "Option::is_none")]
    pub create_time_stamp: Option<i32>,
    #[serde(rename = "fromAccountType", skip_serializing_if = "Option::is_none")]
    pub from_account_type: Option<String>,
    #[serde(rename = "fromEmail", skip_serializing_if = "Option::is_none")]
    pub from_email: Option<String>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
    #[serde(rename = "toAccountType", skip_serializing_if = "Option::is_none")]
    pub to_account_type: Option<String>,
    #[serde(rename = "toEmail", skip_serializing_if = "Option::is_none")]
    pub to_email: Option<String>,
    #[serde(rename = "tranId", skip_serializing_if = "Option::is_none")]
    pub tran_id: Option<i64>,
}

impl SubaccountGetSubAccountUniversalTransferV1RespResultInner {
    pub fn new() -> SubaccountGetSubAccountUniversalTransferV1RespResultInner {
        SubaccountGetSubAccountUniversalTransferV1RespResultInner {
            amount: None,
            asset: None,
            client_tran_id: None,
            create_time_stamp: None,
            from_account_type: None,
            from_email: None,
            status: None,
            to_account_type: None,
            to_email: None,
            tran_id: None,
        }
    }
}

