/*
 * Binance Sub Account API
 *
 * OpenAPI specification for Binance exchange - Subaccount API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::subaccount::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SubaccountGetManagedSubaccountAccountSnapshotV1RespSnapshotVosInnerData {
    #[serde(rename = "balances", skip_serializing_if = "Option::is_none")]
    pub balances: Option<Vec<models::SubaccountGetManagedSubaccountAccountSnapshotV1RespSnapshotVosInnerDataBalancesInner>>,
    #[serde(rename = "totalAssetOfBtc", skip_serializing_if = "Option::is_none")]
    pub total_asset_of_btc: Option<String>,
}

impl SubaccountGetManagedSubaccountAccountSnapshotV1RespSnapshotVosInnerData {
    pub fn new() -> SubaccountGetManagedSubaccountAccountSnapshotV1RespSnapshotVosInnerData {
        SubaccountGetManagedSubaccountAccountSnapshotV1RespSnapshotVosInnerData {
            balances: None,
            total_asset_of_btc: None,
        }
    }
}

