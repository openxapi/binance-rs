/*
 * Binance Sub Account API
 *
 * OpenAPI specification for Binance exchange - Subaccount API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::subaccount::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SubaccountGetManagedSubaccountFetchFutureAssetV1RespSnapshotVosInnerDataAssetsInner {
    #[serde(rename = "asset", skip_serializing_if = "Option::is_none")]
    pub asset: Option<String>,
    #[serde(rename = "marginBalance", skip_serializing_if = "Option::is_none")]
    pub margin_balance: Option<i32>,
    #[serde(rename = "walletBalance", skip_serializing_if = "Option::is_none")]
    pub wallet_balance: Option<i32>,
}

impl SubaccountGetManagedSubaccountFetchFutureAssetV1RespSnapshotVosInnerDataAssetsInner {
    pub fn new() -> SubaccountGetManagedSubaccountFetchFutureAssetV1RespSnapshotVosInnerDataAssetsInner {
        SubaccountGetManagedSubaccountFetchFutureAssetV1RespSnapshotVosInnerDataAssetsInner {
            asset: None,
            margin_balance: None,
            wallet_balance: None,
        }
    }
}

