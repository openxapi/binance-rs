/*
 * Binance Sub Account API
 *
 * OpenAPI specification for Binance exchange - Subaccount API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::subaccount::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SubaccountGetManagedSubaccountMarginAssetV1Resp {
    #[serde(rename = "marginLevel", skip_serializing_if = "Option::is_none")]
    pub margin_level: Option<String>,
    #[serde(rename = "totalAssetOfBtc", skip_serializing_if = "Option::is_none")]
    pub total_asset_of_btc: Option<String>,
    #[serde(rename = "totalLiabilityOfBtc", skip_serializing_if = "Option::is_none")]
    pub total_liability_of_btc: Option<String>,
    #[serde(rename = "totalNetAssetOfBtc", skip_serializing_if = "Option::is_none")]
    pub total_net_asset_of_btc: Option<String>,
    #[serde(rename = "userAssets", skip_serializing_if = "Option::is_none")]
    pub user_assets: Option<Vec<models::SubaccountGetManagedSubaccountMarginAssetV1RespUserAssetsInner>>,
}

impl SubaccountGetManagedSubaccountMarginAssetV1Resp {
    pub fn new() -> SubaccountGetManagedSubaccountMarginAssetV1Resp {
        SubaccountGetManagedSubaccountMarginAssetV1Resp {
            margin_level: None,
            total_asset_of_btc: None,
            total_liability_of_btc: None,
            total_net_asset_of_btc: None,
            user_assets: None,
        }
    }
}

