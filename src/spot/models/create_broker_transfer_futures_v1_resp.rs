/*
 * Binance Spot API
 *
 * OpenAPI specification for Binance exchange - Spot API
 *
 * The version of the OpenAPI document: 0.2.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::spot::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateBrokerTransferFuturesV1Resp {
    #[serde(rename = "clientTranId", skip_serializing_if = "Option::is_none")]
    pub client_tran_id: Option<String>,
    #[serde(rename = "success", skip_serializing_if = "Option::is_none")]
    pub success: Option<bool>,
    #[serde(rename = "txnId", skip_serializing_if = "Option::is_none")]
    pub txn_id: Option<String>,
}

impl CreateBrokerTransferFuturesV1Resp {
    pub fn new() -> CreateBrokerTransferFuturesV1Resp {
        CreateBrokerTransferFuturesV1Resp {
            client_tran_id: None,
            success: None,
            txn_id: None,
        }
    }
}

