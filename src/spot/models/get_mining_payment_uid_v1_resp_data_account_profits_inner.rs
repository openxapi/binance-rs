/*
 * Binance Spot API
 *
 * OpenAPI specification for Binance exchange - Spot API
 *
 * The version of the OpenAPI document: 0.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::spot::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetMiningPaymentUidV1RespDataAccountProfitsInner {
    #[serde(rename = "amount", skip_serializing_if = "Option::is_none")]
    pub amount: Option<f64>,
    #[serde(rename = "coinName", skip_serializing_if = "Option::is_none")]
    pub coin_name: Option<String>,
    #[serde(rename = "puid", skip_serializing_if = "Option::is_none")]
    pub puid: Option<i32>,
    #[serde(rename = "subName", skip_serializing_if = "Option::is_none")]
    pub sub_name: Option<String>,
    #[serde(rename = "time", skip_serializing_if = "Option::is_none")]
    pub time: Option<i64>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<i32>,
}

impl GetMiningPaymentUidV1RespDataAccountProfitsInner {
    pub fn new() -> GetMiningPaymentUidV1RespDataAccountProfitsInner {
        GetMiningPaymentUidV1RespDataAccountProfitsInner {
            amount: None,
            coin_name: None,
            puid: None,
            sub_name: None,
            time: None,
            r#type: None,
        }
    }
}

