/*
 * Binance Spot API
 *
 * OpenAPI specification for Binance exchange - Spot API
 *
 * The version of the OpenAPI document: 0.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::spot::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetAssetDribbletV1RespUserAssetDribbletsInner {
    #[serde(rename = "operateTime", skip_serializing_if = "Option::is_none")]
    pub operate_time: Option<i64>,
    #[serde(rename = "totalServiceChargeAmount", skip_serializing_if = "Option::is_none")]
    pub total_service_charge_amount: Option<String>,
    #[serde(rename = "totalTransferedAmount", skip_serializing_if = "Option::is_none")]
    pub total_transfered_amount: Option<String>,
    #[serde(rename = "transId", skip_serializing_if = "Option::is_none")]
    pub trans_id: Option<i64>,
    #[serde(rename = "userAssetDribbletDetails", skip_serializing_if = "Option::is_none")]
    pub user_asset_dribblet_details: Option<Vec<models::GetAssetDribbletV1RespUserAssetDribbletsInnerUserAssetDribbletDetailsInner>>,
}

impl GetAssetDribbletV1RespUserAssetDribbletsInner {
    pub fn new() -> GetAssetDribbletV1RespUserAssetDribbletsInner {
        GetAssetDribbletV1RespUserAssetDribbletsInner {
            operate_time: None,
            total_service_charge_amount: None,
            total_transfered_amount: None,
            trans_id: None,
            user_asset_dribblet_details: None,
        }
    }
}

