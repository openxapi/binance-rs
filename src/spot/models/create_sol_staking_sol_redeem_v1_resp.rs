/*
 * Binance Spot API
 *
 * OpenAPI specification for Binance exchange - Spot API
 *
 * The version of the OpenAPI document: 0.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::spot::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateSolStakingSolRedeemV1Resp {
    #[serde(rename = "arrivalTime", skip_serializing_if = "Option::is_none")]
    pub arrival_time: Option<i64>,
    #[serde(rename = "exchangeRate", skip_serializing_if = "Option::is_none")]
    pub exchange_rate: Option<String>,
    #[serde(rename = "solAmount", skip_serializing_if = "Option::is_none")]
    pub sol_amount: Option<String>,
    #[serde(rename = "success", skip_serializing_if = "Option::is_none")]
    pub success: Option<bool>,
}

impl CreateSolStakingSolRedeemV1Resp {
    pub fn new() -> CreateSolStakingSolRedeemV1Resp {
        CreateSolStakingSolRedeemV1Resp {
            arrival_time: None,
            exchange_rate: None,
            sol_amount: None,
            success: None,
        }
    }
}

