/*
 * Binance Spot API
 *
 * OpenAPI specification for Binance exchange - Spot API
 *
 * The version of the OpenAPI document: 0.2.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::spot::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreatePortfolioRedeemV1Resp {
    #[serde(rename = "fromAsset", skip_serializing_if = "Option::is_none")]
    pub from_asset: Option<String>,
    #[serde(rename = "fromAssetQty", skip_serializing_if = "Option::is_none")]
    pub from_asset_qty: Option<f64>,
    #[serde(rename = "rate", skip_serializing_if = "Option::is_none")]
    pub rate: Option<f64>,
    #[serde(rename = "targetAsset", skip_serializing_if = "Option::is_none")]
    pub target_asset: Option<String>,
    #[serde(rename = "targetAssetQty", skip_serializing_if = "Option::is_none")]
    pub target_asset_qty: Option<f64>,
}

impl CreatePortfolioRedeemV1Resp {
    pub fn new() -> CreatePortfolioRedeemV1Resp {
        CreatePortfolioRedeemV1Resp {
            from_asset: None,
            from_asset_qty: None,
            rate: None,
            target_asset: None,
            target_asset_qty: None,
        }
    }
}

