/*
 * Binance Spot API
 *
 * OpenAPI specification for Binance exchange - Spot API
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::spot::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetAlgoFuturesSubOrdersV1Resp {
    #[serde(rename = "executedAmt", skip_serializing_if = "Option::is_none")]
    pub executed_amt: Option<String>,
    #[serde(rename = "executedQty", skip_serializing_if = "Option::is_none")]
    pub executed_qty: Option<String>,
    #[serde(rename = "subOrders", skip_serializing_if = "Option::is_none")]
    pub sub_orders: Option<Vec<models::GetAlgoFuturesSubOrdersV1RespSubOrdersInner>>,
    #[serde(rename = "total", skip_serializing_if = "Option::is_none")]
    pub total: Option<i32>,
}

impl GetAlgoFuturesSubOrdersV1Resp {
    pub fn new() -> GetAlgoFuturesSubOrdersV1Resp {
        GetAlgoFuturesSubOrdersV1Resp {
            executed_amt: None,
            executed_qty: None,
            sub_orders: None,
            total: None,
        }
    }
}

