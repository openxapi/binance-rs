/*
 * Binance Spot API
 *
 * OpenAPI specification for Binance exchange - Spot API
 *
 * The version of the OpenAPI document: 0.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::spot::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetSolStakingSolHistoryBnsolRewardsHistoryV1RespRowsInner {
    #[serde(rename = "amountInSOL", skip_serializing_if = "Option::is_none")]
    pub amount_in_sol: Option<String>,
    #[serde(rename = "annualPercentageRate", skip_serializing_if = "Option::is_none")]
    pub annual_percentage_rate: Option<String>,
    #[serde(rename = "holding", skip_serializing_if = "Option::is_none")]
    pub holding: Option<String>,
    #[serde(rename = "holdingInSOL", skip_serializing_if = "Option::is_none")]
    pub holding_in_sol: Option<String>,
    #[serde(rename = "time", skip_serializing_if = "Option::is_none")]
    pub time: Option<i64>,
}

impl GetSolStakingSolHistoryBnsolRewardsHistoryV1RespRowsInner {
    pub fn new() -> GetSolStakingSolHistoryBnsolRewardsHistoryV1RespRowsInner {
        GetSolStakingSolHistoryBnsolRewardsHistoryV1RespRowsInner {
            amount_in_sol: None,
            annual_percentage_rate: None,
            holding: None,
            holding_in_sol: None,
            time: None,
        }
    }
}

