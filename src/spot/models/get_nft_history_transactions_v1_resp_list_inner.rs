/*
 * Binance Spot API
 *
 * OpenAPI specification for Binance exchange - Spot API
 *
 * The version of the OpenAPI document: 0.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::spot::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetNftHistoryTransactionsV1RespListInner {
    #[serde(rename = "orderNo", skip_serializing_if = "Option::is_none")]
    pub order_no: Option<String>,
    #[serde(rename = "tokens", skip_serializing_if = "Option::is_none")]
    pub tokens: Option<Vec<models::GetNftHistoryTransactionsV1RespListInnerTokensInner>>,
    #[serde(rename = "tradeAmount", skip_serializing_if = "Option::is_none")]
    pub trade_amount: Option<String>,
    #[serde(rename = "tradeCurrency", skip_serializing_if = "Option::is_none")]
    pub trade_currency: Option<String>,
    #[serde(rename = "tradeTime", skip_serializing_if = "Option::is_none")]
    pub trade_time: Option<i64>,
}

impl GetNftHistoryTransactionsV1RespListInner {
    pub fn new() -> GetNftHistoryTransactionsV1RespListInner {
        GetNftHistoryTransactionsV1RespListInner {
            order_no: None,
            tokens: None,
            trade_amount: None,
            trade_currency: None,
            trade_time: None,
        }
    }
}

