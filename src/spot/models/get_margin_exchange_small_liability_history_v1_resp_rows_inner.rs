/*
 * Binance Spot API
 *
 * OpenAPI specification for Binance exchange - Spot API
 *
 * The version of the OpenAPI document: 0.2.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::spot::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetMarginExchangeSmallLiabilityHistoryV1RespRowsInner {
    #[serde(rename = "amount", skip_serializing_if = "Option::is_none")]
    pub amount: Option<String>,
    #[serde(rename = "asset", skip_serializing_if = "Option::is_none")]
    pub asset: Option<String>,
    #[serde(rename = "bizType", skip_serializing_if = "Option::is_none")]
    pub biz_type: Option<String>,
    #[serde(rename = "targetAmount", skip_serializing_if = "Option::is_none")]
    pub target_amount: Option<String>,
    #[serde(rename = "targetAsset", skip_serializing_if = "Option::is_none")]
    pub target_asset: Option<String>,
    #[serde(rename = "timestamp", skip_serializing_if = "Option::is_none")]
    pub timestamp: Option<i64>,
}

impl GetMarginExchangeSmallLiabilityHistoryV1RespRowsInner {
    pub fn new() -> GetMarginExchangeSmallLiabilityHistoryV1RespRowsInner {
        GetMarginExchangeSmallLiabilityHistoryV1RespRowsInner {
            amount: None,
            asset: None,
            biz_type: None,
            target_amount: None,
            target_asset: None,
            timestamp: None,
        }
    }
}

