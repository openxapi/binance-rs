/*
 * Binance Spot API
 *
 * OpenAPI specification for Binance exchange - Spot API
 *
 * The version of the OpenAPI document: 0.2.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::spot::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateAssetDustBtcV1RespDetailsInner {
    #[serde(rename = "amountFree", skip_serializing_if = "Option::is_none")]
    pub amount_free: Option<String>,
    #[serde(rename = "asset", skip_serializing_if = "Option::is_none")]
    pub asset: Option<String>,
    #[serde(rename = "assetFullName", skip_serializing_if = "Option::is_none")]
    pub asset_full_name: Option<String>,
    #[serde(rename = "exchange", skip_serializing_if = "Option::is_none")]
    pub exchange: Option<String>,
    #[serde(rename = "toBNB", skip_serializing_if = "Option::is_none")]
    pub to_bnb: Option<String>,
    #[serde(rename = "toBNBOffExchange", skip_serializing_if = "Option::is_none")]
    pub to_bnb_off_exchange: Option<String>,
    #[serde(rename = "toBTC", skip_serializing_if = "Option::is_none")]
    pub to_btc: Option<String>,
}

impl CreateAssetDustBtcV1RespDetailsInner {
    pub fn new() -> CreateAssetDustBtcV1RespDetailsInner {
        CreateAssetDustBtcV1RespDetailsInner {
            amount_free: None,
            asset: None,
            asset_full_name: None,
            exchange: None,
            to_bnb: None,
            to_bnb_off_exchange: None,
            to_btc: None,
        }
    }
}

