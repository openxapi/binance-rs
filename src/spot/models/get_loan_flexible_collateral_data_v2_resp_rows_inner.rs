/*
 * Binance Spot API
 *
 * OpenAPI specification for Binance exchange - Spot API
 *
 * The version of the OpenAPI document: 0.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::spot::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetLoanFlexibleCollateralDataV2RespRowsInner {
    #[serde(rename = "collateralCoin", skip_serializing_if = "Option::is_none")]
    pub collateral_coin: Option<String>,
    #[serde(rename = "initialLTV", skip_serializing_if = "Option::is_none")]
    pub initial_ltv: Option<String>,
    #[serde(rename = "liquidationLTV", skip_serializing_if = "Option::is_none")]
    pub liquidation_ltv: Option<String>,
    #[serde(rename = "marginCallLTV", skip_serializing_if = "Option::is_none")]
    pub margin_call_ltv: Option<String>,
    #[serde(rename = "maxLimit", skip_serializing_if = "Option::is_none")]
    pub max_limit: Option<String>,
}

impl GetLoanFlexibleCollateralDataV2RespRowsInner {
    pub fn new() -> GetLoanFlexibleCollateralDataV2RespRowsInner {
        GetLoanFlexibleCollateralDataV2RespRowsInner {
            collateral_coin: None,
            initial_ltv: None,
            liquidation_ltv: None,
            margin_call_ltv: None,
            max_limit: None,
        }
    }
}

