/*
 * Binance Spot API
 *
 * OpenAPI specification for Binance exchange - Spot API
 *
 * The version of the OpenAPI document: 0.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::spot::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetMiningPaymentOtherV1RespDataOtherProfitsInner {
    #[serde(rename = "coinName", skip_serializing_if = "Option::is_none")]
    pub coin_name: Option<String>,
    #[serde(rename = "profitAmount", skip_serializing_if = "Option::is_none")]
    pub profit_amount: Option<f64>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<i32>,
    #[serde(rename = "time", skip_serializing_if = "Option::is_none")]
    pub time: Option<i64>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<i32>,
}

impl GetMiningPaymentOtherV1RespDataOtherProfitsInner {
    pub fn new() -> GetMiningPaymentOtherV1RespDataOtherProfitsInner {
        GetMiningPaymentOtherV1RespDataOtherProfitsInner {
            coin_name: None,
            profit_amount: None,
            status: None,
            time: None,
            r#type: None,
        }
    }
}

