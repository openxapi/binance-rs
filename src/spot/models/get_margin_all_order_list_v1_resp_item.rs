/*
 * Binance Spot API
 *
 * OpenAPI specification for Binance exchange - Spot API
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::spot::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetMarginAllOrderListV1RespItem {
    #[serde(rename = "contingencyType", skip_serializing_if = "Option::is_none")]
    pub contingency_type: Option<String>,
    #[serde(rename = "isIsolated", skip_serializing_if = "Option::is_none")]
    pub is_isolated: Option<bool>,
    #[serde(rename = "listClientOrderId", skip_serializing_if = "Option::is_none")]
    pub list_client_order_id: Option<String>,
    #[serde(rename = "listOrderStatus", skip_serializing_if = "Option::is_none")]
    pub list_order_status: Option<String>,
    #[serde(rename = "listStatusType", skip_serializing_if = "Option::is_none")]
    pub list_status_type: Option<String>,
    #[serde(rename = "orderListId", skip_serializing_if = "Option::is_none")]
    pub order_list_id: Option<i64>,
    #[serde(rename = "orders", skip_serializing_if = "Option::is_none")]
    pub orders: Option<Vec<models::CreateMarginOrderOcoV1RespOrdersInner>>,
    #[serde(rename = "symbol", skip_serializing_if = "Option::is_none")]
    pub symbol: Option<String>,
    #[serde(rename = "transactionTime", skip_serializing_if = "Option::is_none")]
    pub transaction_time: Option<i64>,
}

impl GetMarginAllOrderListV1RespItem {
    pub fn new() -> GetMarginAllOrderListV1RespItem {
        GetMarginAllOrderListV1RespItem {
            contingency_type: None,
            is_isolated: None,
            list_client_order_id: None,
            list_order_status: None,
            list_status_type: None,
            order_list_id: None,
            orders: None,
            symbol: None,
            transaction_time: None,
        }
    }
}

