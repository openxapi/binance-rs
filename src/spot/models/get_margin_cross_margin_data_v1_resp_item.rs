/*
 * Binance Spot API
 *
 * OpenAPI specification for Binance exchange - Spot API
 *
 * The version of the OpenAPI document: 0.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::spot::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetMarginCrossMarginDataV1RespItem {
    #[serde(rename = "borrowLimit", skip_serializing_if = "Option::is_none")]
    pub borrow_limit: Option<String>,
    #[serde(rename = "borrowable", skip_serializing_if = "Option::is_none")]
    pub borrowable: Option<bool>,
    #[serde(rename = "coin", skip_serializing_if = "Option::is_none")]
    pub coin: Option<String>,
    #[serde(rename = "dailyInterest", skip_serializing_if = "Option::is_none")]
    pub daily_interest: Option<String>,
    #[serde(rename = "marginablePairs", skip_serializing_if = "Option::is_none")]
    pub marginable_pairs: Option<Vec<String>>,
    #[serde(rename = "transferIn", skip_serializing_if = "Option::is_none")]
    pub transfer_in: Option<bool>,
    #[serde(rename = "vipLevel", skip_serializing_if = "Option::is_none")]
    pub vip_level: Option<i32>,
    #[serde(rename = "yearlyInterest", skip_serializing_if = "Option::is_none")]
    pub yearly_interest: Option<String>,
}

impl GetMarginCrossMarginDataV1RespItem {
    pub fn new() -> GetMarginCrossMarginDataV1RespItem {
        GetMarginCrossMarginDataV1RespItem {
            borrow_limit: None,
            borrowable: None,
            coin: None,
            daily_interest: None,
            marginable_pairs: None,
            transfer_in: None,
            vip_level: None,
            yearly_interest: None,
        }
    }
}

