/*
 * Binance Spot API
 *
 * OpenAPI specification for Binance exchange - Spot API
 *
 * The version of the OpenAPI document: 0.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::spot::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetLoanFlexibleBorrowHistoryV2RespRowsInner {
    #[serde(rename = "borrowTime", skip_serializing_if = "Option::is_none")]
    pub borrow_time: Option<i64>,
    #[serde(rename = "collateralCoin", skip_serializing_if = "Option::is_none")]
    pub collateral_coin: Option<String>,
    #[serde(rename = "initialCollateralAmount", skip_serializing_if = "Option::is_none")]
    pub initial_collateral_amount: Option<String>,
    #[serde(rename = "initialLoanAmount", skip_serializing_if = "Option::is_none")]
    pub initial_loan_amount: Option<String>,
    #[serde(rename = "loanCoin", skip_serializing_if = "Option::is_none")]
    pub loan_coin: Option<String>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
}

impl GetLoanFlexibleBorrowHistoryV2RespRowsInner {
    pub fn new() -> GetLoanFlexibleBorrowHistoryV2RespRowsInner {
        GetLoanFlexibleBorrowHistoryV2RespRowsInner {
            borrow_time: None,
            collateral_coin: None,
            initial_collateral_amount: None,
            initial_loan_amount: None,
            loan_coin: None,
            status: None,
        }
    }
}

