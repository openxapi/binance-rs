/*
 * Binance Spot API
 *
 * OpenAPI specification for Binance exchange - Spot API
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::spot::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetMarginIsolatedAccountV1Resp {
    #[serde(rename = "assets", skip_serializing_if = "Option::is_none")]
    pub assets: Option<Vec<models::GetMarginIsolatedAccountV1RespAssetsInner>>,
    #[serde(rename = "totalAssetOfBtc", skip_serializing_if = "Option::is_none")]
    pub total_asset_of_btc: Option<String>,
    #[serde(rename = "totalLiabilityOfBtc", skip_serializing_if = "Option::is_none")]
    pub total_liability_of_btc: Option<String>,
    #[serde(rename = "totalNetAssetOfBtc", skip_serializing_if = "Option::is_none")]
    pub total_net_asset_of_btc: Option<String>,
}

impl GetMarginIsolatedAccountV1Resp {
    pub fn new() -> GetMarginIsolatedAccountV1Resp {
        GetMarginIsolatedAccountV1Resp {
            assets: None,
            total_asset_of_btc: None,
            total_liability_of_btc: None,
            total_net_asset_of_btc: None,
        }
    }
}

