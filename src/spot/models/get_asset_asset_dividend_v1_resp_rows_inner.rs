/*
 * Binance Spot API
 *
 * OpenAPI specification for Binance exchange - Spot API
 *
 * The version of the OpenAPI document: 0.2.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::spot::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetAssetAssetDividendV1RespRowsInner {
    #[serde(rename = "amount", skip_serializing_if = "Option::is_none")]
    pub amount: Option<String>,
    #[serde(rename = "asset", skip_serializing_if = "Option::is_none")]
    pub asset: Option<String>,
    #[serde(rename = "divTime", skip_serializing_if = "Option::is_none")]
    pub div_time: Option<i64>,
    #[serde(rename = "enInfo", skip_serializing_if = "Option::is_none")]
    pub en_info: Option<String>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "tranId", skip_serializing_if = "Option::is_none")]
    pub tran_id: Option<i64>,
}

impl GetAssetAssetDividendV1RespRowsInner {
    pub fn new() -> GetAssetAssetDividendV1RespRowsInner {
        GetAssetAssetDividendV1RespRowsInner {
            amount: None,
            asset: None,
            div_time: None,
            en_info: None,
            id: None,
            tran_id: None,
        }
    }
}

