/*
 * Binance Spot API
 *
 * OpenAPI specification for Binance exchange - Spot API
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::spot::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SpotSymbolFilter {
    #[serde(rename = "applyMaxToMarket", skip_serializing_if = "Option::is_none")]
    pub apply_max_to_market: Option<bool>,
    #[serde(rename = "applyMinToMarket", skip_serializing_if = "Option::is_none")]
    pub apply_min_to_market: Option<bool>,
    #[serde(rename = "applyToMarket", skip_serializing_if = "Option::is_none")]
    pub apply_to_market: Option<bool>,
    #[serde(rename = "askMultiplierDown", skip_serializing_if = "Option::is_none")]
    pub ask_multiplier_down: Option<String>,
    #[serde(rename = "askMultiplierUp", skip_serializing_if = "Option::is_none")]
    pub ask_multiplier_up: Option<String>,
    #[serde(rename = "avgPriceMins", skip_serializing_if = "Option::is_none")]
    pub avg_price_mins: Option<i32>,
    #[serde(rename = "bidMultiplierDown", skip_serializing_if = "Option::is_none")]
    pub bid_multiplier_down: Option<String>,
    #[serde(rename = "bidMultiplierUp", skip_serializing_if = "Option::is_none")]
    pub bid_multiplier_up: Option<String>,
    #[serde(rename = "filterType", skip_serializing_if = "Option::is_none")]
    pub filter_type: Option<String>,
    #[serde(rename = "limit", skip_serializing_if = "Option::is_none")]
    pub limit: Option<i32>,
    #[serde(rename = "maxNotionalValue", skip_serializing_if = "Option::is_none")]
    pub max_notional_value: Option<String>,
    #[serde(rename = "maxNumAlgoOrders", skip_serializing_if = "Option::is_none")]
    pub max_num_algo_orders: Option<i32>,
    #[serde(rename = "maxNumIcebergOrders", skip_serializing_if = "Option::is_none")]
    pub max_num_iceberg_orders: Option<i32>,
    #[serde(rename = "maxNumOrders", skip_serializing_if = "Option::is_none")]
    pub max_num_orders: Option<i32>,
    #[serde(rename = "maxPosition", skip_serializing_if = "Option::is_none")]
    pub max_position: Option<String>,
    #[serde(rename = "maxPrice", skip_serializing_if = "Option::is_none")]
    pub max_price: Option<String>,
    #[serde(rename = "maxQty", skip_serializing_if = "Option::is_none")]
    pub max_qty: Option<String>,
    #[serde(rename = "maxTrailingAboveDelta", skip_serializing_if = "Option::is_none")]
    pub max_trailing_above_delta: Option<i32>,
    #[serde(rename = "maxTrailingBelowDelta", skip_serializing_if = "Option::is_none")]
    pub max_trailing_below_delta: Option<i32>,
    #[serde(rename = "minNotionalValue", skip_serializing_if = "Option::is_none")]
    pub min_notional_value: Option<String>,
    #[serde(rename = "minPrice", skip_serializing_if = "Option::is_none")]
    pub min_price: Option<String>,
    #[serde(rename = "minQty", skip_serializing_if = "Option::is_none")]
    pub min_qty: Option<String>,
    #[serde(rename = "minTrailingAboveDelta", skip_serializing_if = "Option::is_none")]
    pub min_trailing_above_delta: Option<i32>,
    #[serde(rename = "minTrailingBelowDelta", skip_serializing_if = "Option::is_none")]
    pub min_trailing_below_delta: Option<i32>,
    #[serde(rename = "multiplierDown", skip_serializing_if = "Option::is_none")]
    pub multiplier_down: Option<String>,
    #[serde(rename = "multiplierUp", skip_serializing_if = "Option::is_none")]
    pub multiplier_up: Option<String>,
    #[serde(rename = "stepSize", skip_serializing_if = "Option::is_none")]
    pub step_size: Option<String>,
    #[serde(rename = "tickSize", skip_serializing_if = "Option::is_none")]
    pub tick_size: Option<String>,
}

impl SpotSymbolFilter {
    pub fn new() -> SpotSymbolFilter {
        SpotSymbolFilter {
            apply_max_to_market: None,
            apply_min_to_market: None,
            apply_to_market: None,
            ask_multiplier_down: None,
            ask_multiplier_up: None,
            avg_price_mins: None,
            bid_multiplier_down: None,
            bid_multiplier_up: None,
            filter_type: None,
            limit: None,
            max_notional_value: None,
            max_num_algo_orders: None,
            max_num_iceberg_orders: None,
            max_num_orders: None,
            max_position: None,
            max_price: None,
            max_qty: None,
            max_trailing_above_delta: None,
            max_trailing_below_delta: None,
            min_notional_value: None,
            min_price: None,
            min_qty: None,
            min_trailing_above_delta: None,
            min_trailing_below_delta: None,
            multiplier_down: None,
            multiplier_up: None,
            step_size: None,
            tick_size: None,
        }
    }
}

