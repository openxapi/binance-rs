/*
 * Binance Spot API
 *
 * OpenAPI specification for Binance exchange - Spot API
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::spot::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetCapitalWithdrawAddressListV1RespItem {
    #[serde(rename = "address", skip_serializing_if = "Option::is_none")]
    pub address: Option<String>,
    #[serde(rename = "addressTag", skip_serializing_if = "Option::is_none")]
    pub address_tag: Option<String>,
    #[serde(rename = "coin", skip_serializing_if = "Option::is_none")]
    pub coin: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "network", skip_serializing_if = "Option::is_none")]
    pub network: Option<String>,
    #[serde(rename = "originType", skip_serializing_if = "Option::is_none")]
    pub origin_type: Option<String>,
    #[serde(rename = "whiteStatus", skip_serializing_if = "Option::is_none")]
    pub white_status: Option<bool>,
}

impl GetCapitalWithdrawAddressListV1RespItem {
    pub fn new() -> GetCapitalWithdrawAddressListV1RespItem {
        GetCapitalWithdrawAddressListV1RespItem {
            address: None,
            address_tag: None,
            coin: None,
            name: None,
            network: None,
            origin_type: None,
            white_status: None,
        }
    }
}

