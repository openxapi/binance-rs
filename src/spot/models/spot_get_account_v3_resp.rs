/*
 * Binance Spot API
 *
 * OpenAPI specification for Binance exchange - Spot API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SpotGetAccountV3Resp {
    #[serde(rename = "accountType", skip_serializing_if = "Option::is_none")]
    pub account_type: Option<String>,
    #[serde(rename = "balances", skip_serializing_if = "Option::is_none")]
    pub balances: Option<Vec<models::SpotGetAccountV3RespBalancesInner>>,
    #[serde(rename = "brokered", skip_serializing_if = "Option::is_none")]
    pub brokered: Option<bool>,
    #[serde(rename = "buyerCommission", skip_serializing_if = "Option::is_none")]
    pub buyer_commission: Option<i32>,
    #[serde(rename = "canDeposit", skip_serializing_if = "Option::is_none")]
    pub can_deposit: Option<bool>,
    #[serde(rename = "canTrade", skip_serializing_if = "Option::is_none")]
    pub can_trade: Option<bool>,
    #[serde(rename = "canWithdraw", skip_serializing_if = "Option::is_none")]
    pub can_withdraw: Option<bool>,
    #[serde(rename = "commissionRates", skip_serializing_if = "Option::is_none")]
    pub commission_rates: Option<Box<models::SpotGetAccountCommissionV3RespStandardCommission>>,
    #[serde(rename = "makerCommission", skip_serializing_if = "Option::is_none")]
    pub maker_commission: Option<i32>,
    #[serde(rename = "permissions", skip_serializing_if = "Option::is_none")]
    pub permissions: Option<Vec<String>>,
    #[serde(rename = "preventSor", skip_serializing_if = "Option::is_none")]
    pub prevent_sor: Option<bool>,
    #[serde(rename = "requireSelfTradePrevention", skip_serializing_if = "Option::is_none")]
    pub require_self_trade_prevention: Option<bool>,
    #[serde(rename = "sellerCommission", skip_serializing_if = "Option::is_none")]
    pub seller_commission: Option<i32>,
    #[serde(rename = "takerCommission", skip_serializing_if = "Option::is_none")]
    pub taker_commission: Option<i32>,
    #[serde(rename = "uid", skip_serializing_if = "Option::is_none")]
    pub uid: Option<i32>,
    #[serde(rename = "updateTime", skip_serializing_if = "Option::is_none")]
    pub update_time: Option<i64>,
}

impl SpotGetAccountV3Resp {
    pub fn new() -> SpotGetAccountV3Resp {
        SpotGetAccountV3Resp {
            account_type: None,
            balances: None,
            brokered: None,
            buyer_commission: None,
            can_deposit: None,
            can_trade: None,
            can_withdraw: None,
            commission_rates: None,
            maker_commission: None,
            permissions: None,
            prevent_sor: None,
            require_self_trade_prevention: None,
            seller_commission: None,
            taker_commission: None,
            uid: None,
            update_time: None,
        }
    }
}

