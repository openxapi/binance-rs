/*
 * Binance Spot API
 *
 * OpenAPI specification for Binance exchange - Spot API
 *
 * The version of the OpenAPI document: 0.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::spot::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetEthStakingAccountV2Resp {
    #[serde(rename = "holdingInETH", skip_serializing_if = "Option::is_none")]
    pub holding_in_eth: Option<String>,
    #[serde(rename = "holdings", skip_serializing_if = "Option::is_none")]
    pub holdings: Option<Box<models::GetEthStakingAccountV2RespHoldings>>,
    #[serde(rename = "profit", skip_serializing_if = "Option::is_none")]
    pub profit: Option<Box<models::GetEthStakingAccountV2RespProfit>>,
    #[serde(rename = "thirtyDaysProfitInETH", skip_serializing_if = "Option::is_none")]
    pub thirty_days_profit_in_eth: Option<String>,
}

impl GetEthStakingAccountV2Resp {
    pub fn new() -> GetEthStakingAccountV2Resp {
        GetEthStakingAccountV2Resp {
            holding_in_eth: None,
            holdings: None,
            profit: None,
            thirty_days_profit_in_eth: None,
        }
    }
}

