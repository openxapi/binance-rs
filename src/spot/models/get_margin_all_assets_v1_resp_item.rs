/*
 * Binance Spot API
 *
 * OpenAPI specification for Binance exchange - Spot API
 *
 * The version of the OpenAPI document: 0.2.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::spot::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetMarginAllAssetsV1RespItem {
    #[serde(rename = "assetFullName", skip_serializing_if = "Option::is_none")]
    pub asset_full_name: Option<String>,
    #[serde(rename = "assetName", skip_serializing_if = "Option::is_none")]
    pub asset_name: Option<String>,
    #[serde(rename = "delistTime", skip_serializing_if = "Option::is_none")]
    pub delist_time: Option<i64>,
    #[serde(rename = "isBorrowable", skip_serializing_if = "Option::is_none")]
    pub is_borrowable: Option<bool>,
    #[serde(rename = "isMortgageable", skip_serializing_if = "Option::is_none")]
    pub is_mortgageable: Option<bool>,
    #[serde(rename = "userMinBorrow", skip_serializing_if = "Option::is_none")]
    pub user_min_borrow: Option<String>,
    #[serde(rename = "userMinRepay", skip_serializing_if = "Option::is_none")]
    pub user_min_repay: Option<String>,
}

impl GetMarginAllAssetsV1RespItem {
    pub fn new() -> GetMarginAllAssetsV1RespItem {
        GetMarginAllAssetsV1RespItem {
            asset_full_name: None,
            asset_name: None,
            delist_time: None,
            is_borrowable: None,
            is_mortgageable: None,
            user_min_borrow: None,
            user_min_repay: None,
        }
    }
}

