/*
 * Binance Spot API
 *
 * OpenAPI specification for Binance exchange - Spot API
 *
 * The version of the OpenAPI document: 0.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::spot::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner {
    #[serde(rename = "algoName", skip_serializing_if = "Option::is_none")]
    pub algo_name: Option<String>,
    #[serde(rename = "amount", skip_serializing_if = "Option::is_none")]
    pub amount: Option<f64>,
    #[serde(rename = "coinName", skip_serializing_if = "Option::is_none")]
    pub coin_name: Option<String>,
    #[serde(rename = "day", skip_serializing_if = "Option::is_none")]
    pub day: Option<i32>,
    #[serde(rename = "hashRate", skip_serializing_if = "Option::is_none")]
    pub hash_rate: Option<i32>,
    #[serde(rename = "poolUsername", skip_serializing_if = "Option::is_none")]
    pub pool_username: Option<String>,
    #[serde(rename = "toPoolUsername", skip_serializing_if = "Option::is_none")]
    pub to_pool_username: Option<String>,
}

impl GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner {
    pub fn new() -> GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner {
        GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner {
            algo_name: None,
            amount: None,
            coin_name: None,
            day: None,
            hash_rate: None,
            pool_username: None,
            to_pool_username: None,
        }
    }
}

