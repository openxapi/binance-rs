/*
 * Binance Spot API
 *
 * OpenAPI specification for Binance exchange - Spot API
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::spot::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateBrokerSubAccountApiCommissionFuturesV1Resp {
    #[serde(rename = "makerAdjustment", skip_serializing_if = "Option::is_none")]
    pub maker_adjustment: Option<i32>,
    #[serde(rename = "makerCommission", skip_serializing_if = "Option::is_none")]
    pub maker_commission: Option<i32>,
    #[serde(rename = "subAccountId", skip_serializing_if = "Option::is_none")]
    pub sub_account_id: Option<i64>,
    #[serde(rename = "symbol", skip_serializing_if = "Option::is_none")]
    pub symbol: Option<String>,
    #[serde(rename = "takerAdjustment", skip_serializing_if = "Option::is_none")]
    pub taker_adjustment: Option<i32>,
    #[serde(rename = "takerCommission", skip_serializing_if = "Option::is_none")]
    pub taker_commission: Option<i32>,
}

impl CreateBrokerSubAccountApiCommissionFuturesV1Resp {
    pub fn new() -> CreateBrokerSubAccountApiCommissionFuturesV1Resp {
        CreateBrokerSubAccountApiCommissionFuturesV1Resp {
            maker_adjustment: None,
            maker_commission: None,
            sub_account_id: None,
            symbol: None,
            taker_adjustment: None,
            taker_commission: None,
        }
    }
}

