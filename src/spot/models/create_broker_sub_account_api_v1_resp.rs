/*
 * Binance Spot API
 *
 * OpenAPI specification for Binance exchange - Spot API
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::spot::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateBrokerSubAccountApiV1Resp {
    #[serde(rename = "apiKey", skip_serializing_if = "Option::is_none")]
    pub api_key: Option<String>,
    #[serde(rename = "canTrade", skip_serializing_if = "Option::is_none")]
    pub can_trade: Option<bool>,
    #[serde(rename = "futuresTrade", skip_serializing_if = "Option::is_none")]
    pub futures_trade: Option<bool>,
    #[serde(rename = "marginTrade", skip_serializing_if = "Option::is_none")]
    pub margin_trade: Option<bool>,
    #[serde(rename = "secretKey", skip_serializing_if = "Option::is_none")]
    pub secret_key: Option<String>,
    #[serde(rename = "subaccountId", skip_serializing_if = "Option::is_none")]
    pub subaccount_id: Option<String>,
}

impl CreateBrokerSubAccountApiV1Resp {
    pub fn new() -> CreateBrokerSubAccountApiV1Resp {
        CreateBrokerSubAccountApiV1Resp {
            api_key: None,
            can_trade: None,
            futures_trade: None,
            margin_trade: None,
            secret_key: None,
            subaccount_id: None,
        }
    }
}

