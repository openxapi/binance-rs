/*
 * Binance Spot API
 *
 * OpenAPI specification for Binance exchange - Spot API
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::spot::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetBrokerInfoV1Resp {
    #[serde(rename = "maxMakerCommission", skip_serializing_if = "Option::is_none")]
    pub max_maker_commission: Option<f64>,
    #[serde(rename = "maxSubAccountQty", skip_serializing_if = "Option::is_none")]
    pub max_sub_account_qty: Option<i32>,
    #[serde(rename = "maxTakerCommission", skip_serializing_if = "Option::is_none")]
    pub max_taker_commission: Option<f64>,
    #[serde(rename = "minMakerCommission", skip_serializing_if = "Option::is_none")]
    pub min_maker_commission: Option<f64>,
    #[serde(rename = "minTakerCommission", skip_serializing_if = "Option::is_none")]
    pub min_taker_commission: Option<f64>,
    #[serde(rename = "subAccountQty", skip_serializing_if = "Option::is_none")]
    pub sub_account_qty: Option<i32>,
}

impl GetBrokerInfoV1Resp {
    pub fn new() -> GetBrokerInfoV1Resp {
        GetBrokerInfoV1Resp {
            max_maker_commission: None,
            max_sub_account_qty: None,
            max_taker_commission: None,
            min_maker_commission: None,
            min_taker_commission: None,
            sub_account_qty: None,
        }
    }
}

