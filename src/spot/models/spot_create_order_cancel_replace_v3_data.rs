/*
 * Binance Spot API
 *
 * OpenAPI specification for Binance exchange - Spot API
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::spot::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SpotCreateOrderCancelReplaceV3Data {
    #[serde(rename = "cancelResponse", skip_serializing_if = "Option::is_none")]
    pub cancel_response: Option<Box<models::SpotCreateOrderCancelReplaceV3DataCancelResponse>>,
    #[serde(rename = "cancelResult", skip_serializing_if = "Option::is_none")]
    pub cancel_result: Option<String>,
    #[serde(rename = "newOrderResponse", skip_serializing_if = "Option::is_none")]
    pub new_order_response: Option<Box<models::SpotCreateOrderCancelReplaceV3DataNewOrderResponse>>,
    #[serde(rename = "newOrderResult", skip_serializing_if = "Option::is_none")]
    pub new_order_result: Option<String>,
}

impl SpotCreateOrderCancelReplaceV3Data {
    pub fn new() -> SpotCreateOrderCancelReplaceV3Data {
        SpotCreateOrderCancelReplaceV3Data {
            cancel_response: None,
            cancel_result: None,
            new_order_response: None,
            new_order_result: None,
        }
    }
}

