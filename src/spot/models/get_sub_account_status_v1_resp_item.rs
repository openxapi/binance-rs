/*
 * Binance Spot API
 *
 * OpenAPI specification for Binance exchange - Spot API
 *
 * The version of the OpenAPI document: 0.2.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::spot::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetSubAccountStatusV1RespItem {
    #[serde(rename = "email", skip_serializing_if = "Option::is_none")]
    pub email: Option<String>,
    #[serde(rename = "insertTime", skip_serializing_if = "Option::is_none")]
    pub insert_time: Option<i64>,
    #[serde(rename = "isFutureEnabled", skip_serializing_if = "Option::is_none")]
    pub is_future_enabled: Option<bool>,
    #[serde(rename = "isMarginEnabled", skip_serializing_if = "Option::is_none")]
    pub is_margin_enabled: Option<bool>,
    #[serde(rename = "isSubUserEnabled", skip_serializing_if = "Option::is_none")]
    pub is_sub_user_enabled: Option<bool>,
    #[serde(rename = "isUserActive", skip_serializing_if = "Option::is_none")]
    pub is_user_active: Option<bool>,
    #[serde(rename = "mobile", skip_serializing_if = "Option::is_none")]
    pub mobile: Option<i32>,
}

impl GetSubAccountStatusV1RespItem {
    pub fn new() -> GetSubAccountStatusV1RespItem {
        GetSubAccountStatusV1RespItem {
            email: None,
            insert_time: None,
            is_future_enabled: None,
            is_margin_enabled: None,
            is_sub_user_enabled: None,
            is_user_active: None,
            mobile: None,
        }
    }
}

