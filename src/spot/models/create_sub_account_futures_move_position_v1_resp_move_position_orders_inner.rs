/*
 * Binance Spot API
 *
 * OpenAPI specification for Binance exchange - Spot API
 *
 * The version of the OpenAPI document: 0.2.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::spot::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateSubAccountFuturesMovePositionV1RespMovePositionOrdersInner {
    #[serde(rename = "fromUserEmail", skip_serializing_if = "Option::is_none")]
    pub from_user_email: Option<String>,
    #[serde(rename = "positionSide", skip_serializing_if = "Option::is_none")]
    pub position_side: Option<String>,
    #[serde(rename = "price", skip_serializing_if = "Option::is_none")]
    pub price: Option<String>,
    #[serde(rename = "priceType", skip_serializing_if = "Option::is_none")]
    pub price_type: Option<String>,
    #[serde(rename = "productType", skip_serializing_if = "Option::is_none")]
    pub product_type: Option<String>,
    #[serde(rename = "quantity", skip_serializing_if = "Option::is_none")]
    pub quantity: Option<String>,
    #[serde(rename = "side", skip_serializing_if = "Option::is_none")]
    pub side: Option<String>,
    #[serde(rename = "success", skip_serializing_if = "Option::is_none")]
    pub success: Option<bool>,
    #[serde(rename = "symbol", skip_serializing_if = "Option::is_none")]
    pub symbol: Option<String>,
    #[serde(rename = "toUserEmail", skip_serializing_if = "Option::is_none")]
    pub to_user_email: Option<String>,
}

impl CreateSubAccountFuturesMovePositionV1RespMovePositionOrdersInner {
    pub fn new() -> CreateSubAccountFuturesMovePositionV1RespMovePositionOrdersInner {
        CreateSubAccountFuturesMovePositionV1RespMovePositionOrdersInner {
            from_user_email: None,
            position_side: None,
            price: None,
            price_type: None,
            product_type: None,
            quantity: None,
            side: None,
            success: None,
            symbol: None,
            to_user_email: None,
        }
    }
}

