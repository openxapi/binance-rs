/*
 * Binance Spot API
 *
 * OpenAPI specification for Binance exchange - Spot API
 *
 * The version of the OpenAPI document: 0.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::spot::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetEthStakingEthHistoryRedemptionHistoryV1RespRowsInner {
    #[serde(rename = "amount", skip_serializing_if = "Option::is_none")]
    pub amount: Option<String>,
    #[serde(rename = "arrivalTime", skip_serializing_if = "Option::is_none")]
    pub arrival_time: Option<i64>,
    #[serde(rename = "asset", skip_serializing_if = "Option::is_none")]
    pub asset: Option<String>,
    #[serde(rename = "conversionRatio", skip_serializing_if = "Option::is_none")]
    pub conversion_ratio: Option<String>,
    #[serde(rename = "distributeAmount", skip_serializing_if = "Option::is_none")]
    pub distribute_amount: Option<String>,
    #[serde(rename = "distributeAsset", skip_serializing_if = "Option::is_none")]
    pub distribute_asset: Option<String>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
    #[serde(rename = "time", skip_serializing_if = "Option::is_none")]
    pub time: Option<i64>,
}

impl GetEthStakingEthHistoryRedemptionHistoryV1RespRowsInner {
    pub fn new() -> GetEthStakingEthHistoryRedemptionHistoryV1RespRowsInner {
        GetEthStakingEthHistoryRedemptionHistoryV1RespRowsInner {
            amount: None,
            arrival_time: None,
            asset: None,
            conversion_ratio: None,
            distribute_amount: None,
            distribute_asset: None,
            status: None,
            time: None,
        }
    }
}

