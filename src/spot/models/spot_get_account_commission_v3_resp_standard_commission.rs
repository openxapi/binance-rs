/*
 * Binance Spot API
 *
 * OpenAPI specification for Binance exchange - Spot API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::spot::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SpotGetAccountCommissionV3RespStandardCommission {
    #[serde(rename = "buyer", skip_serializing_if = "Option::is_none")]
    pub buyer: Option<String>,
    #[serde(rename = "maker", skip_serializing_if = "Option::is_none")]
    pub maker: Option<String>,
    #[serde(rename = "seller", skip_serializing_if = "Option::is_none")]
    pub seller: Option<String>,
    #[serde(rename = "taker", skip_serializing_if = "Option::is_none")]
    pub taker: Option<String>,
}

impl SpotGetAccountCommissionV3RespStandardCommission {
    pub fn new() -> SpotGetAccountCommissionV3RespStandardCommission {
        SpotGetAccountCommissionV3RespStandardCommission {
            buyer: None,
            maker: None,
            seller: None,
            taker: None,
        }
    }
}

