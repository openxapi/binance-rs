/*
 * Binance Spot API
 *
 * OpenAPI specification for Binance exchange - Spot API
 *
 * The version of the OpenAPI document: 0.2.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::spot::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetCopyTradingFuturesLeadSymbolV1RespDataInner {
    #[serde(rename = "baseAsset", skip_serializing_if = "Option::is_none")]
    pub base_asset: Option<String>,
    #[serde(rename = "quoteAsset", skip_serializing_if = "Option::is_none")]
    pub quote_asset: Option<String>,
    #[serde(rename = "symbol", skip_serializing_if = "Option::is_none")]
    pub symbol: Option<String>,
}

impl GetCopyTradingFuturesLeadSymbolV1RespDataInner {
    pub fn new() -> GetCopyTradingFuturesLeadSymbolV1RespDataInner {
        GetCopyTradingFuturesLeadSymbolV1RespDataInner {
            base_asset: None,
            quote_asset: None,
            symbol: None,
        }
    }
}

