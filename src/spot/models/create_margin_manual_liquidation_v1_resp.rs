/*
 * Binance Spot API
 *
 * OpenAPI specification for Binance exchange - Spot API
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::spot::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateMarginManualLiquidationV1Resp {
    #[serde(rename = "asset", skip_serializing_if = "Option::is_none")]
    pub asset: Option<String>,
    #[serde(rename = "interest", skip_serializing_if = "Option::is_none")]
    pub interest: Option<String>,
    #[serde(rename = "liabilityAsset", skip_serializing_if = "Option::is_none")]
    pub liability_asset: Option<String>,
    #[serde(rename = "liabilityQty", skip_serializing_if = "Option::is_none")]
    pub liability_qty: Option<f64>,
    #[serde(rename = "principal", skip_serializing_if = "Option::is_none")]
    pub principal: Option<String>,
}

impl CreateMarginManualLiquidationV1Resp {
    pub fn new() -> CreateMarginManualLiquidationV1Resp {
        CreateMarginManualLiquidationV1Resp {
            asset: None,
            interest: None,
            liability_asset: None,
            liability_qty: None,
            principal: None,
        }
    }
}

