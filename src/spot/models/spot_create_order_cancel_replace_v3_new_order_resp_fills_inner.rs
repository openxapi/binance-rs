/*
 * Binance Spot API
 *
 * OpenAPI specification for Binance exchange - Spot API
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SpotCreateOrderCancelReplaceV3NewOrderRespFillsInner {
    #[serde(rename = "allocId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub alloc_id: Option<Option<serde_json::Value>>,
    #[serde(rename = "commission", skip_serializing_if = "Option::is_none")]
    pub commission: Option<String>,
    #[serde(rename = "commissionAsset", skip_serializing_if = "Option::is_none")]
    pub commission_asset: Option<String>,
    #[serde(rename = "matchType", skip_serializing_if = "Option::is_none")]
    pub match_type: Option<String>,
    #[serde(rename = "price", skip_serializing_if = "Option::is_none")]
    pub price: Option<String>,
    #[serde(rename = "qty", skip_serializing_if = "Option::is_none")]
    pub qty: Option<String>,
    #[serde(rename = "tradeId", skip_serializing_if = "Option::is_none")]
    pub trade_id: Option<i64>,
}

impl SpotCreateOrderCancelReplaceV3NewOrderRespFillsInner {
    pub fn new() -> SpotCreateOrderCancelReplaceV3NewOrderRespFillsInner {
        SpotCreateOrderCancelReplaceV3NewOrderRespFillsInner {
            alloc_id: None,
            commission: None,
            commission_asset: None,
            match_type: None,
            price: None,
            qty: None,
            trade_id: None,
        }
    }
}

