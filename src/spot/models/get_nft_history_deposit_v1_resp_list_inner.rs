/*
 * Binance Spot API
 *
 * OpenAPI specification for Binance exchange - Spot API
 *
 * The version of the OpenAPI document: 0.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::spot::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetNftHistoryDepositV1RespListInner {
    #[serde(rename = "contractAdrress", skip_serializing_if = "Option::is_none")]
    pub contract_adrress: Option<String>,
    #[serde(rename = "network", skip_serializing_if = "Option::is_none")]
    pub network: Option<String>,
    #[serde(rename = "timestamp", skip_serializing_if = "Option::is_none")]
    pub timestamp: Option<i64>,
    #[serde(rename = "tokenId", skip_serializing_if = "Option::is_none")]
    pub token_id: Option<String>,
    #[serde(rename = "txID", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub tx_id: Option<Option<serde_json::Value>>,
}

impl GetNftHistoryDepositV1RespListInner {
    pub fn new() -> GetNftHistoryDepositV1RespListInner {
        GetNftHistoryDepositV1RespListInner {
            contract_adrress: None,
            network: None,
            timestamp: None,
            token_id: None,
            tx_id: None,
        }
    }
}

