/*
 * Binance Spot API
 *
 * OpenAPI specification for Binance exchange - Spot API
 *
 * The version of the OpenAPI document: 0.2.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::spot::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetAccountCommissionV3Resp {
    #[serde(rename = "discount", skip_serializing_if = "Option::is_none")]
    pub discount: Option<Box<models::GetAccountCommissionV3RespDiscount>>,
    #[serde(rename = "standardCommission", skip_serializing_if = "Option::is_none")]
    pub standard_commission: Option<Box<models::GetAccountCommissionV3RespStandardCommission>>,
    #[serde(rename = "symbol", skip_serializing_if = "Option::is_none")]
    pub symbol: Option<String>,
    #[serde(rename = "taxCommission", skip_serializing_if = "Option::is_none")]
    pub tax_commission: Option<Box<models::GetAccountCommissionV3RespStandardCommission>>,
}

impl GetAccountCommissionV3Resp {
    pub fn new() -> GetAccountCommissionV3Resp {
        GetAccountCommissionV3Resp {
            discount: None,
            standard_commission: None,
            symbol: None,
            tax_commission: None,
        }
    }
}

