/*
 * Binance Spot API
 *
 * OpenAPI specification for Binance exchange - Spot API
 *
 * The version of the OpenAPI document: 0.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::spot::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetMarginAllPairsV1RespItem {
    #[serde(rename = "base", skip_serializing_if = "Option::is_none")]
    pub base: Option<String>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "isBuyAllowed", skip_serializing_if = "Option::is_none")]
    pub is_buy_allowed: Option<bool>,
    #[serde(rename = "isMarginTrade", skip_serializing_if = "Option::is_none")]
    pub is_margin_trade: Option<bool>,
    #[serde(rename = "isSellAllowed", skip_serializing_if = "Option::is_none")]
    pub is_sell_allowed: Option<bool>,
    #[serde(rename = "quote", skip_serializing_if = "Option::is_none")]
    pub quote: Option<String>,
    #[serde(rename = "symbol", skip_serializing_if = "Option::is_none")]
    pub symbol: Option<String>,
}

impl GetMarginAllPairsV1RespItem {
    pub fn new() -> GetMarginAllPairsV1RespItem {
        GetMarginAllPairsV1RespItem {
            base: None,
            id: None,
            is_buy_allowed: None,
            is_margin_trade: None,
            is_sell_allowed: None,
            quote: None,
            symbol: None,
        }
    }
}

