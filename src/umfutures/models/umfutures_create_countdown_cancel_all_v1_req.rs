/*
 * Binance USD-M Futures API
 *
 * OpenAPI specification for Binance exchange - Umfutures API
 *
 * The version of the OpenAPI document: 0.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::umfutures::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UmfuturesCreateCountdownCancelAllV1Req {
    #[serde(rename = "countdownTime")]
    pub countdown_time: i64,
    #[serde(rename = "recvWindow", skip_serializing_if = "Option::is_none")]
    pub recv_window: Option<i64>,
    #[serde(rename = "symbol")]
    pub symbol: String,
    #[serde(rename = "timestamp")]
    pub timestamp: i64,
}

impl UmfuturesCreateCountdownCancelAllV1Req {
    pub fn new(countdown_time: i64, symbol: String, timestamp: i64) -> UmfuturesCreateCountdownCancelAllV1Req {
        UmfuturesCreateCountdownCancelAllV1Req {
            countdown_time,
            recv_window: None,
            symbol,
            timestamp,
        }
    }
}

