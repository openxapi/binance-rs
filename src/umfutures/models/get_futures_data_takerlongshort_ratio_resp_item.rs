/*
 * Binance USD-M Futures API
 *
 * OpenAPI specification for Binance exchange - Umfutures API
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::umfutures::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetFuturesDataTakerlongshortRatioRespItem {
    #[serde(rename = "buySellRatio", skip_serializing_if = "Option::is_none")]
    pub buy_sell_ratio: Option<String>,
    #[serde(rename = "buyVol", skip_serializing_if = "Option::is_none")]
    pub buy_vol: Option<String>,
    #[serde(rename = "sellVol", skip_serializing_if = "Option::is_none")]
    pub sell_vol: Option<String>,
    #[serde(rename = "timestamp", skip_serializing_if = "Option::is_none")]
    pub timestamp: Option<String>,
}

impl GetFuturesDataTakerlongshortRatioRespItem {
    pub fn new() -> GetFuturesDataTakerlongshortRatioRespItem {
        GetFuturesDataTakerlongshortRatioRespItem {
            buy_sell_ratio: None,
            buy_vol: None,
            sell_vol: None,
            timestamp: None,
        }
    }
}

