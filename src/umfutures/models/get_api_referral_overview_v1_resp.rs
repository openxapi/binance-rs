/*
 * Binance USD-M Futures API
 *
 * OpenAPI specification for Binance exchange - Umfutures API
 *
 * The version of the OpenAPI document: 0.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::umfutures::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetApiReferralOverviewV1Resp {
    #[serde(rename = "brokerId", skip_serializing_if = "Option::is_none")]
    pub broker_id: Option<String>,
    #[serde(rename = "newTraderRebateCommission", skip_serializing_if = "Option::is_none")]
    pub new_trader_rebate_commission: Option<String>,
    #[serde(rename = "oldTraderRebateCommission", skip_serializing_if = "Option::is_none")]
    pub old_trader_rebate_commission: Option<String>,
    #[serde(rename = "time", skip_serializing_if = "Option::is_none")]
    pub time: Option<i64>,
    #[serde(rename = "totalRebateVol", skip_serializing_if = "Option::is_none")]
    pub total_rebate_vol: Option<String>,
    #[serde(rename = "totalTradeUser", skip_serializing_if = "Option::is_none")]
    pub total_trade_user: Option<i32>,
    #[serde(rename = "totalTradeVol", skip_serializing_if = "Option::is_none")]
    pub total_trade_vol: Option<String>,
    #[serde(rename = "unit", skip_serializing_if = "Option::is_none")]
    pub unit: Option<String>,
}

impl GetApiReferralOverviewV1Resp {
    pub fn new() -> GetApiReferralOverviewV1Resp {
        GetApiReferralOverviewV1Resp {
            broker_id: None,
            new_trader_rebate_commission: None,
            old_trader_rebate_commission: None,
            time: None,
            total_rebate_vol: None,
            total_trade_user: None,
            total_trade_vol: None,
            unit: None,
        }
    }
}

